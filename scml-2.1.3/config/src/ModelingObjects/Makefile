# Makefile.in generated by automake 1.9.2 from Makefile.am.
# src/ModelingObjects/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




SOURCES = $(libModelingObjects_a_SOURCES)

srcdir = ../../../src/ModelingObjects
top_srcdir = ../../..
VPATH = ../../../src/ModelingObjects
pkgdatadir = $(datadir)/package
pkglibdir = $(libdir)/package
pkgincludedir = $(includedir)/package
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = src/ModelingObjects
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libModelingObjects_a_AR = $(AR) $(ARFLAGS)
libModelingObjects_a_LIBADD =
am__objects_1 =
am__objects_2 = scml_array_base.$(OBJEXT) \
	scml_array_notify_if.$(OBJEXT) scml_bitfield.$(OBJEXT) \
	scml_bitfield_base.$(OBJEXT) scml_bitfield_container.$(OBJEXT) \
	scml_clock_b.$(OBJEXT) scml_clock_counter.$(OBJEXT) \
	scml_clock_enable.$(OBJEXT) scml_divided_clock.$(OBJEXT) \
	scml_memory_base.$(OBJEXT) scml_memory_utils.$(OBJEXT) \
	scml_memory_registration.$(OBJEXT) scml_memory_user.$(OBJEXT) \
	scml_memory_operations_podt_common.$(OBJEXT) \
	scml_memory_operations_pts_bool.$(OBJEXT) \
	scml_memory_operations_pts_char.$(OBJEXT) \
	scml_memory_operations_pts_signed_char.$(OBJEXT) \
	scml_memory_operations_pts_signed_int.$(OBJEXT) \
	scml_memory_operations_pts_signed_long_int.$(OBJEXT) \
	scml_memory_operations_pts_signed_long_long.$(OBJEXT) \
	scml_memory_operations_pts_signed_short_int.$(OBJEXT) \
	scml_memory_operations_pts_unsigned_char.$(OBJEXT) \
	scml_memory_operations_pts_unsigned_int.$(OBJEXT) \
	scml_memory_operations_pts_unsigned_long_int.$(OBJEXT) \
	scml_memory_operations_pts_unsigned_long_long.$(OBJEXT) \
	scml_memory_operations_pts_unsigned_short_int.$(OBJEXT) \
	scml_property.$(OBJEXT) scml_property_server_if.$(OBJEXT) \
	scml_property_registry.$(OBJEXT) \
	scml_simple_property_server.$(OBJEXT) \
	scml_inmemory_property_server.$(OBJEXT) \
	scml_memory_map_facade.$(OBJEXT) \
	scml_synchroniser_registry.$(OBJEXT) \
	scml_router_operations_podt_common.$(OBJEXT) \
	scml_router_operations_pts_unsigned_char.$(OBJEXT) \
	scml_router_operations_pts_unsigned_int.$(OBJEXT) \
	scml_router_operations_pts_unsigned_long_int.$(OBJEXT) \
	scml_router_operations_pts_unsigned_long_long.$(OBJEXT) \
	scml_router_operations_pts_unsigned_short_int.$(OBJEXT) \
	scml_tlm2_target_adaptor_base.$(OBJEXT) \
	scml_tlm2_initiator_adaptor_base.$(OBJEXT) \
	scml_memory_operations_pts_sc_biguint_n.$(OBJEXT) \
	scml_router_operations_pts_sc_biguint_n.$(OBJEXT) \
	scml_bitfield_callback_observers.$(OBJEXT) \
	scml_mapped_ranges_observers.$(OBJEXT) \
	scml_callback_observers.$(OBJEXT)
am_libModelingObjects_a_OBJECTS = $(am__objects_1) $(am__objects_2)
libModelingObjects_a_OBJECTS = $(am_libModelingObjects_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libModelingObjects_a_SOURCES)
DIST_SOURCES = $(libModelingObjects_a_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run tar
AR_TOOL = ar cru
AS = as
AUTOCONF = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run autoconf
AUTOHEADER = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run autoheader
AUTOMAKE = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run automake-1.9
AWK = gawk
CC = g++
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -O3
COMMONINC = -DSC_USE_STD_STRING -I/p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/include  -I/p/inway/eda/opensource/systemc/2.3/systemc-install_2.3.0/libraries/Release/Linux_64/gcc_4.5.2/include -I/p/inway/eda/opensource/systemc/2.3/systemc-install_2.3.0/libraries/Release/Linux_64/gcc_4.5.2/include
COMMONLIB = -L/p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/lib-linux64 -lscml2 -lscml2_logging -lscml2_testing -L/p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/lib-linux64 -lModelingObjects -lscml2_logging -L/p/inway/eda/opensource/systemc/2.3/systemc-install_2.3.0/libraries/Release/Linux_64/gcc_4.5.2/lib-linux -lsystemc 
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -O3
CYGPATH_W = echo
DEBUG_CXXFLAGS = -g
DEFS = -I.
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
EXTRA_CXXFLAGS = -Wall
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAIN_LIBRARY = libModelingObjects.a
MAKEINFO = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run makeinfo
OBJEXT = o
OPT_CXXFLAGS = -O3
OSCITLM_INC = -I/p/inway/eda/opensource/systemc/2.3/systemc-install_2.3.0/libraries/Release/Linux_64/gcc_4.5.2/include
PACKAGE = package
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
QT_ARCH = x86_64
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
SYSC_INC = -I/p/inway/eda/opensource/systemc/2.3/systemc-install_2.3.0/libraries/Release/Linux_64/gcc_4.5.2/include
TARGET_ARCH = linux64
VERSION = version
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
noinst_LIBRARIES = libModelingObjects.a
H_FILES = \
	scmlinc/scml.h \
        scmlinc/scml_array_base.h \
        scmlinc/scml_array.h \
        scmlinc/scml_array_notify_if.h \
        scmlinc/scml_bitfield_base.h \
        scmlinc/scml_bitfield_container.h \
        scmlinc/scml_bitfield_container_if.h \
        scmlinc/scml_bitfield.h \
        scmlinc/scml_clock_counter.h \
        scmlinc/scml_clock_enable.h \
        scmlinc/scml_clock_gate.h \
        scmlinc/scml_clock.h \
        scmlinc/scml_clock_b.h \
        scmlinc/scml_divided_clock.h \
        scmlinc/scml_memory_base.h \
        scmlinc/scml_memory.h \
        scmlinc/scml_memory_index_reference.h \
        scmlinc/scml_memory_operations.h \
        scmlinc/scml_memory_operations_podt_common.h \
        scmlinc/scml_memory_operations_pts_bool.h \
        scmlinc/scml_memory_operations_pts_char.h \
        scmlinc/scml_memory_operations_pts_signed_char.h \
        scmlinc/scml_memory_operations_pts_double.h \
        scmlinc/scml_memory_operations_pts_float.h \
        scmlinc/scml_memory_operations_pts_signed_int.h \
        scmlinc/scml_memory_operations_pts_signed_long_int.h \
        scmlinc/scml_memory_operations_pts_signed_long_long.h \
        scmlinc/scml_memory_operations_pts_signed_short_int.h \
        scmlinc/scml_memory_operations_pts_unsigned_char.h \
        scmlinc/scml_memory_operations_pts_unsigned_int.h \
        scmlinc/scml_memory_operations_pts_unsigned_long_int.h \
        scmlinc/scml_memory_operations_pts_unsigned_long_long.h \
        scmlinc/scml_memory_operations_pts_unsigned_short_int.h \
        scmlinc/scml_memory_pv_if.h \
        scmlinc/scml_memory_utils.h \
        scmlinc/scml_memsize.h \
        scmlinc/scml_pool.h \
        scmlinc/scml_post_if.h \
        scmlinc/scml_post_port.h \
        scmlinc/scml_pv_decoder.h \
        scmlinc/scml_pv_decoder_port.h \
        scmlinc/scml_pv_multi_port.h \
        scmlinc/scml_post_PV_transactor.h \
        scmlinc/scml_transaction_request.h \
        scmlinc/scml_types.h \
        scmlinc/scml_memory_registration.h \
        scmlinc/scml_memory_user.h \
	scmlinc/scml_property.h \
	scmlinc/scml_property_server_if.h \
	scmlinc/scml_property_registry.h \
	scmlinc/scml_simple_property_server.h \
	scmlinc/scml_inmemory_property_server.h \
	scmlinc/scml_memory_map_facade.h \
	scmlinc/scml_memory_map_observer_if.h \
	scmlinc/scml_transport_if.h \
	scmlinc/scml_synchroniser_registry.h  \
	scmlinc/scml_memory_iterator.h \
	scmlinc/scml_memory_algorithm.h \
	scmlinc/scml_router.h \
        scmlinc/scml_router_operations.h \
        scmlinc/scml_router_operations_podt_common.h \
        scmlinc/scml_router_operations_pts_unsigned_char.h \
        scmlinc/scml_router_operations_pts_unsigned_int.h \
        scmlinc/scml_router_operations_pts_unsigned_long_int.h \
        scmlinc/scml_router_operations_pts_unsigned_long_long.h \
        scmlinc/scml_router_operations_pts_unsigned_short_int.h \
        scmlinc/scml_command_processor.h \
	scmlinc/scml_pv_initiator_port.h \
       	scmlinc/scml_tlm2_target_adaptor_base.h \
       	scmlinc/scml_tlm2_initiator_adaptor_base.h \
       	scmlinc/scml_tlm2_target_adaptor.h \
       	scmlinc/scml_tlm2_initiator_adaptor.h \
       	scmlinc/scml_post_target_adaptor.h \
       	scmlinc/scml_mapable_if_to_T.h \
       	scmlinc/scml_mapable_if.h \
	scmlinc/scml_memory_operations_pts_sc_biguint_n.h \
	scmlinc/scml_router_operations_pts_sc_biguint_n.h \
	scmlinc/scml_transport_callback.h \
	scmlinc/scml_bitfield_callback_observer.h \
       	scmlinc/scml_bitfield_callback_observer_owner.h \
       	scmlinc/scml_bitfield_callback_observers.h \
       	scmlinc/scml_callback_observer.h \
       	scmlinc/scml_callback_observer_owner.h \
       	scmlinc/scml_callback_observers.h \
	scmlinc/scml_mapped_range.h \
       	scmlinc/scml_mapped_ranges_observer.h \
       	scmlinc/scml_mapped_ranges_observer_owner.h \
       	scmlinc/scml_mapped_ranges_observers.h \
       	scmlinc/scml_memory_callback_observer_if.h

LNKHEADERS = \
        scml.h \
	scml_memory.h \
	scml_clock.h

noinst_HEADERS = $(H_FILES)
CXX_FILES = \
	src/scml_array_base.cc \
	src/scml_array_notify_if.cc \
	src/scml_bitfield.cc \
	src/scml_bitfield_base.cc \
	src/scml_bitfield_container.cc \
	src/scml_clock_b.cc \
	src/scml_clock_counter.cc \
	src/scml_clock_enable.cc \
	src/scml_divided_clock.cc \
	src/scml_memory_base.cc \
	src/scml_memory_utils.cc \
	src/scml_memory_registration.cc \
	src/scml_memory_user.cc \
	src/scml_memory_operations_podt_common.cc \
	src/scml_memory_operations_pts_bool.cc \
        src/scml_memory_operations_pts_char.cc \
        src/scml_memory_operations_pts_signed_char.cc \
        src/scml_memory_operations_pts_signed_int.cc \
        src/scml_memory_operations_pts_signed_long_int.cc \
        src/scml_memory_operations_pts_signed_long_long.cc \
        src/scml_memory_operations_pts_signed_short_int.cc \
        src/scml_memory_operations_pts_unsigned_char.cc \
        src/scml_memory_operations_pts_unsigned_int.cc \
        src/scml_memory_operations_pts_unsigned_long_int.cc \
        src/scml_memory_operations_pts_unsigned_long_long.cc \
        src/scml_memory_operations_pts_unsigned_short_int.cc \
	src/scml_property.cc \
	src/scml_property_server_if.cc \
	src/scml_property_registry.cc \
	src/scml_simple_property_server.cc \
	src/scml_inmemory_property_server.cc \
	src/scml_memory_map_facade.cc \
        src/scml_synchroniser_registry.cc \
	src/scml_router_operations_podt_common.cc \
        src/scml_router_operations_pts_unsigned_char.cc \
        src/scml_router_operations_pts_unsigned_int.cc \
        src/scml_router_operations_pts_unsigned_long_int.cc \
        src/scml_router_operations_pts_unsigned_long_long.cc \
        src/scml_router_operations_pts_unsigned_short_int.cc \
       	src/scml_tlm2_target_adaptor_base.cc \
       	src/scml_tlm2_initiator_adaptor_base.cc \
	src/scml_memory_operations_pts_sc_biguint_n.cc \
	src/scml_router_operations_pts_sc_biguint_n.cc \
	src/scml_bitfield_callback_observers.cc \
	src/scml_mapped_ranges_observers.cc \
	src/scml_callback_observers.cc

NO_CXX_FILES = 
libModelingObjects_a_SOURCES = $(H_FILES) $(CXX_FILES)
INCLUDES = -I$(top_srcdir)/src -I$(srcdir)/scmlinc $(OSCITLM_INC) $(SYSC_INC)
INCLUDE_DIR = $(prefix)/include
SCMLINCLUDE_DIR = $(INCLUDE_DIR)/scmlinc
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/ModelingObjects/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/ModelingObjects/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libModelingObjects.a: $(libModelingObjects_a_OBJECTS) $(libModelingObjects_a_DEPENDENCIES) 
	-rm -f libModelingObjects.a
	$(libModelingObjects_a_AR) libModelingObjects.a $(libModelingObjects_a_OBJECTS) $(libModelingObjects_a_LIBADD)
	$(RANLIB) libModelingObjects.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/scml_array_base.Po
include ./$(DEPDIR)/scml_array_notify_if.Po
include ./$(DEPDIR)/scml_bitfield.Po
include ./$(DEPDIR)/scml_bitfield_base.Po
include ./$(DEPDIR)/scml_bitfield_callback_observers.Po
include ./$(DEPDIR)/scml_bitfield_container.Po
include ./$(DEPDIR)/scml_callback_observers.Po
include ./$(DEPDIR)/scml_clock_b.Po
include ./$(DEPDIR)/scml_clock_counter.Po
include ./$(DEPDIR)/scml_clock_enable.Po
include ./$(DEPDIR)/scml_divided_clock.Po
include ./$(DEPDIR)/scml_inmemory_property_server.Po
include ./$(DEPDIR)/scml_mapped_ranges_observers.Po
include ./$(DEPDIR)/scml_memory_base.Po
include ./$(DEPDIR)/scml_memory_map_facade.Po
include ./$(DEPDIR)/scml_memory_operations_podt_common.Po
include ./$(DEPDIR)/scml_memory_operations_pts_bool.Po
include ./$(DEPDIR)/scml_memory_operations_pts_char.Po
include ./$(DEPDIR)/scml_memory_operations_pts_sc_biguint_n.Po
include ./$(DEPDIR)/scml_memory_operations_pts_signed_char.Po
include ./$(DEPDIR)/scml_memory_operations_pts_signed_int.Po
include ./$(DEPDIR)/scml_memory_operations_pts_signed_long_int.Po
include ./$(DEPDIR)/scml_memory_operations_pts_signed_long_long.Po
include ./$(DEPDIR)/scml_memory_operations_pts_signed_short_int.Po
include ./$(DEPDIR)/scml_memory_operations_pts_unsigned_char.Po
include ./$(DEPDIR)/scml_memory_operations_pts_unsigned_int.Po
include ./$(DEPDIR)/scml_memory_operations_pts_unsigned_long_int.Po
include ./$(DEPDIR)/scml_memory_operations_pts_unsigned_long_long.Po
include ./$(DEPDIR)/scml_memory_operations_pts_unsigned_short_int.Po
include ./$(DEPDIR)/scml_memory_registration.Po
include ./$(DEPDIR)/scml_memory_user.Po
include ./$(DEPDIR)/scml_memory_utils.Po
include ./$(DEPDIR)/scml_property.Po
include ./$(DEPDIR)/scml_property_registry.Po
include ./$(DEPDIR)/scml_property_server_if.Po
include ./$(DEPDIR)/scml_router_operations_podt_common.Po
include ./$(DEPDIR)/scml_router_operations_pts_sc_biguint_n.Po
include ./$(DEPDIR)/scml_router_operations_pts_unsigned_char.Po
include ./$(DEPDIR)/scml_router_operations_pts_unsigned_int.Po
include ./$(DEPDIR)/scml_router_operations_pts_unsigned_long_int.Po
include ./$(DEPDIR)/scml_router_operations_pts_unsigned_long_long.Po
include ./$(DEPDIR)/scml_router_operations_pts_unsigned_short_int.Po
include ./$(DEPDIR)/scml_simple_property_server.Po
include ./$(DEPDIR)/scml_synchroniser_registry.Po
include ./$(DEPDIR)/scml_tlm2_initiator_adaptor_base.Po
include ./$(DEPDIR)/scml_tlm2_target_adaptor_base.Po

.cc.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

scml_array_base.o: src/scml_array_base.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_array_base.o -MD -MP -MF "$(DEPDIR)/scml_array_base.Tpo" -c -o scml_array_base.o `test -f 'src/scml_array_base.cc' || echo '$(srcdir)/'`src/scml_array_base.cc; \
	then mv -f "$(DEPDIR)/scml_array_base.Tpo" "$(DEPDIR)/scml_array_base.Po"; else rm -f "$(DEPDIR)/scml_array_base.Tpo"; exit 1; fi
#	source='src/scml_array_base.cc' object='scml_array_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_array_base.o `test -f 'src/scml_array_base.cc' || echo '$(srcdir)/'`src/scml_array_base.cc

scml_array_base.obj: src/scml_array_base.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_array_base.obj -MD -MP -MF "$(DEPDIR)/scml_array_base.Tpo" -c -o scml_array_base.obj `if test -f 'src/scml_array_base.cc'; then $(CYGPATH_W) 'src/scml_array_base.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_array_base.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_array_base.Tpo" "$(DEPDIR)/scml_array_base.Po"; else rm -f "$(DEPDIR)/scml_array_base.Tpo"; exit 1; fi
#	source='src/scml_array_base.cc' object='scml_array_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_array_base.obj `if test -f 'src/scml_array_base.cc'; then $(CYGPATH_W) 'src/scml_array_base.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_array_base.cc'; fi`

scml_array_notify_if.o: src/scml_array_notify_if.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_array_notify_if.o -MD -MP -MF "$(DEPDIR)/scml_array_notify_if.Tpo" -c -o scml_array_notify_if.o `test -f 'src/scml_array_notify_if.cc' || echo '$(srcdir)/'`src/scml_array_notify_if.cc; \
	then mv -f "$(DEPDIR)/scml_array_notify_if.Tpo" "$(DEPDIR)/scml_array_notify_if.Po"; else rm -f "$(DEPDIR)/scml_array_notify_if.Tpo"; exit 1; fi
#	source='src/scml_array_notify_if.cc' object='scml_array_notify_if.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_array_notify_if.o `test -f 'src/scml_array_notify_if.cc' || echo '$(srcdir)/'`src/scml_array_notify_if.cc

scml_array_notify_if.obj: src/scml_array_notify_if.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_array_notify_if.obj -MD -MP -MF "$(DEPDIR)/scml_array_notify_if.Tpo" -c -o scml_array_notify_if.obj `if test -f 'src/scml_array_notify_if.cc'; then $(CYGPATH_W) 'src/scml_array_notify_if.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_array_notify_if.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_array_notify_if.Tpo" "$(DEPDIR)/scml_array_notify_if.Po"; else rm -f "$(DEPDIR)/scml_array_notify_if.Tpo"; exit 1; fi
#	source='src/scml_array_notify_if.cc' object='scml_array_notify_if.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_array_notify_if.obj `if test -f 'src/scml_array_notify_if.cc'; then $(CYGPATH_W) 'src/scml_array_notify_if.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_array_notify_if.cc'; fi`

scml_bitfield.o: src/scml_bitfield.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_bitfield.o -MD -MP -MF "$(DEPDIR)/scml_bitfield.Tpo" -c -o scml_bitfield.o `test -f 'src/scml_bitfield.cc' || echo '$(srcdir)/'`src/scml_bitfield.cc; \
	then mv -f "$(DEPDIR)/scml_bitfield.Tpo" "$(DEPDIR)/scml_bitfield.Po"; else rm -f "$(DEPDIR)/scml_bitfield.Tpo"; exit 1; fi
#	source='src/scml_bitfield.cc' object='scml_bitfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_bitfield.o `test -f 'src/scml_bitfield.cc' || echo '$(srcdir)/'`src/scml_bitfield.cc

scml_bitfield.obj: src/scml_bitfield.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_bitfield.obj -MD -MP -MF "$(DEPDIR)/scml_bitfield.Tpo" -c -o scml_bitfield.obj `if test -f 'src/scml_bitfield.cc'; then $(CYGPATH_W) 'src/scml_bitfield.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_bitfield.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_bitfield.Tpo" "$(DEPDIR)/scml_bitfield.Po"; else rm -f "$(DEPDIR)/scml_bitfield.Tpo"; exit 1; fi
#	source='src/scml_bitfield.cc' object='scml_bitfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_bitfield.obj `if test -f 'src/scml_bitfield.cc'; then $(CYGPATH_W) 'src/scml_bitfield.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_bitfield.cc'; fi`

scml_bitfield_base.o: src/scml_bitfield_base.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_bitfield_base.o -MD -MP -MF "$(DEPDIR)/scml_bitfield_base.Tpo" -c -o scml_bitfield_base.o `test -f 'src/scml_bitfield_base.cc' || echo '$(srcdir)/'`src/scml_bitfield_base.cc; \
	then mv -f "$(DEPDIR)/scml_bitfield_base.Tpo" "$(DEPDIR)/scml_bitfield_base.Po"; else rm -f "$(DEPDIR)/scml_bitfield_base.Tpo"; exit 1; fi
#	source='src/scml_bitfield_base.cc' object='scml_bitfield_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_bitfield_base.o `test -f 'src/scml_bitfield_base.cc' || echo '$(srcdir)/'`src/scml_bitfield_base.cc

scml_bitfield_base.obj: src/scml_bitfield_base.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_bitfield_base.obj -MD -MP -MF "$(DEPDIR)/scml_bitfield_base.Tpo" -c -o scml_bitfield_base.obj `if test -f 'src/scml_bitfield_base.cc'; then $(CYGPATH_W) 'src/scml_bitfield_base.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_bitfield_base.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_bitfield_base.Tpo" "$(DEPDIR)/scml_bitfield_base.Po"; else rm -f "$(DEPDIR)/scml_bitfield_base.Tpo"; exit 1; fi
#	source='src/scml_bitfield_base.cc' object='scml_bitfield_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_bitfield_base.obj `if test -f 'src/scml_bitfield_base.cc'; then $(CYGPATH_W) 'src/scml_bitfield_base.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_bitfield_base.cc'; fi`

scml_bitfield_container.o: src/scml_bitfield_container.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_bitfield_container.o -MD -MP -MF "$(DEPDIR)/scml_bitfield_container.Tpo" -c -o scml_bitfield_container.o `test -f 'src/scml_bitfield_container.cc' || echo '$(srcdir)/'`src/scml_bitfield_container.cc; \
	then mv -f "$(DEPDIR)/scml_bitfield_container.Tpo" "$(DEPDIR)/scml_bitfield_container.Po"; else rm -f "$(DEPDIR)/scml_bitfield_container.Tpo"; exit 1; fi
#	source='src/scml_bitfield_container.cc' object='scml_bitfield_container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_bitfield_container.o `test -f 'src/scml_bitfield_container.cc' || echo '$(srcdir)/'`src/scml_bitfield_container.cc

scml_bitfield_container.obj: src/scml_bitfield_container.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_bitfield_container.obj -MD -MP -MF "$(DEPDIR)/scml_bitfield_container.Tpo" -c -o scml_bitfield_container.obj `if test -f 'src/scml_bitfield_container.cc'; then $(CYGPATH_W) 'src/scml_bitfield_container.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_bitfield_container.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_bitfield_container.Tpo" "$(DEPDIR)/scml_bitfield_container.Po"; else rm -f "$(DEPDIR)/scml_bitfield_container.Tpo"; exit 1; fi
#	source='src/scml_bitfield_container.cc' object='scml_bitfield_container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_bitfield_container.obj `if test -f 'src/scml_bitfield_container.cc'; then $(CYGPATH_W) 'src/scml_bitfield_container.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_bitfield_container.cc'; fi`

scml_clock_b.o: src/scml_clock_b.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_clock_b.o -MD -MP -MF "$(DEPDIR)/scml_clock_b.Tpo" -c -o scml_clock_b.o `test -f 'src/scml_clock_b.cc' || echo '$(srcdir)/'`src/scml_clock_b.cc; \
	then mv -f "$(DEPDIR)/scml_clock_b.Tpo" "$(DEPDIR)/scml_clock_b.Po"; else rm -f "$(DEPDIR)/scml_clock_b.Tpo"; exit 1; fi
#	source='src/scml_clock_b.cc' object='scml_clock_b.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_clock_b.o `test -f 'src/scml_clock_b.cc' || echo '$(srcdir)/'`src/scml_clock_b.cc

scml_clock_b.obj: src/scml_clock_b.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_clock_b.obj -MD -MP -MF "$(DEPDIR)/scml_clock_b.Tpo" -c -o scml_clock_b.obj `if test -f 'src/scml_clock_b.cc'; then $(CYGPATH_W) 'src/scml_clock_b.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_clock_b.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_clock_b.Tpo" "$(DEPDIR)/scml_clock_b.Po"; else rm -f "$(DEPDIR)/scml_clock_b.Tpo"; exit 1; fi
#	source='src/scml_clock_b.cc' object='scml_clock_b.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_clock_b.obj `if test -f 'src/scml_clock_b.cc'; then $(CYGPATH_W) 'src/scml_clock_b.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_clock_b.cc'; fi`

scml_clock_counter.o: src/scml_clock_counter.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_clock_counter.o -MD -MP -MF "$(DEPDIR)/scml_clock_counter.Tpo" -c -o scml_clock_counter.o `test -f 'src/scml_clock_counter.cc' || echo '$(srcdir)/'`src/scml_clock_counter.cc; \
	then mv -f "$(DEPDIR)/scml_clock_counter.Tpo" "$(DEPDIR)/scml_clock_counter.Po"; else rm -f "$(DEPDIR)/scml_clock_counter.Tpo"; exit 1; fi
#	source='src/scml_clock_counter.cc' object='scml_clock_counter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_clock_counter.o `test -f 'src/scml_clock_counter.cc' || echo '$(srcdir)/'`src/scml_clock_counter.cc

scml_clock_counter.obj: src/scml_clock_counter.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_clock_counter.obj -MD -MP -MF "$(DEPDIR)/scml_clock_counter.Tpo" -c -o scml_clock_counter.obj `if test -f 'src/scml_clock_counter.cc'; then $(CYGPATH_W) 'src/scml_clock_counter.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_clock_counter.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_clock_counter.Tpo" "$(DEPDIR)/scml_clock_counter.Po"; else rm -f "$(DEPDIR)/scml_clock_counter.Tpo"; exit 1; fi
#	source='src/scml_clock_counter.cc' object='scml_clock_counter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_clock_counter.obj `if test -f 'src/scml_clock_counter.cc'; then $(CYGPATH_W) 'src/scml_clock_counter.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_clock_counter.cc'; fi`

scml_clock_enable.o: src/scml_clock_enable.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_clock_enable.o -MD -MP -MF "$(DEPDIR)/scml_clock_enable.Tpo" -c -o scml_clock_enable.o `test -f 'src/scml_clock_enable.cc' || echo '$(srcdir)/'`src/scml_clock_enable.cc; \
	then mv -f "$(DEPDIR)/scml_clock_enable.Tpo" "$(DEPDIR)/scml_clock_enable.Po"; else rm -f "$(DEPDIR)/scml_clock_enable.Tpo"; exit 1; fi
#	source='src/scml_clock_enable.cc' object='scml_clock_enable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_clock_enable.o `test -f 'src/scml_clock_enable.cc' || echo '$(srcdir)/'`src/scml_clock_enable.cc

scml_clock_enable.obj: src/scml_clock_enable.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_clock_enable.obj -MD -MP -MF "$(DEPDIR)/scml_clock_enable.Tpo" -c -o scml_clock_enable.obj `if test -f 'src/scml_clock_enable.cc'; then $(CYGPATH_W) 'src/scml_clock_enable.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_clock_enable.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_clock_enable.Tpo" "$(DEPDIR)/scml_clock_enable.Po"; else rm -f "$(DEPDIR)/scml_clock_enable.Tpo"; exit 1; fi
#	source='src/scml_clock_enable.cc' object='scml_clock_enable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_clock_enable.obj `if test -f 'src/scml_clock_enable.cc'; then $(CYGPATH_W) 'src/scml_clock_enable.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_clock_enable.cc'; fi`

scml_divided_clock.o: src/scml_divided_clock.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_divided_clock.o -MD -MP -MF "$(DEPDIR)/scml_divided_clock.Tpo" -c -o scml_divided_clock.o `test -f 'src/scml_divided_clock.cc' || echo '$(srcdir)/'`src/scml_divided_clock.cc; \
	then mv -f "$(DEPDIR)/scml_divided_clock.Tpo" "$(DEPDIR)/scml_divided_clock.Po"; else rm -f "$(DEPDIR)/scml_divided_clock.Tpo"; exit 1; fi
#	source='src/scml_divided_clock.cc' object='scml_divided_clock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_divided_clock.o `test -f 'src/scml_divided_clock.cc' || echo '$(srcdir)/'`src/scml_divided_clock.cc

scml_divided_clock.obj: src/scml_divided_clock.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_divided_clock.obj -MD -MP -MF "$(DEPDIR)/scml_divided_clock.Tpo" -c -o scml_divided_clock.obj `if test -f 'src/scml_divided_clock.cc'; then $(CYGPATH_W) 'src/scml_divided_clock.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_divided_clock.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_divided_clock.Tpo" "$(DEPDIR)/scml_divided_clock.Po"; else rm -f "$(DEPDIR)/scml_divided_clock.Tpo"; exit 1; fi
#	source='src/scml_divided_clock.cc' object='scml_divided_clock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_divided_clock.obj `if test -f 'src/scml_divided_clock.cc'; then $(CYGPATH_W) 'src/scml_divided_clock.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_divided_clock.cc'; fi`

scml_memory_base.o: src/scml_memory_base.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_base.o -MD -MP -MF "$(DEPDIR)/scml_memory_base.Tpo" -c -o scml_memory_base.o `test -f 'src/scml_memory_base.cc' || echo '$(srcdir)/'`src/scml_memory_base.cc; \
	then mv -f "$(DEPDIR)/scml_memory_base.Tpo" "$(DEPDIR)/scml_memory_base.Po"; else rm -f "$(DEPDIR)/scml_memory_base.Tpo"; exit 1; fi
#	source='src/scml_memory_base.cc' object='scml_memory_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_base.o `test -f 'src/scml_memory_base.cc' || echo '$(srcdir)/'`src/scml_memory_base.cc

scml_memory_base.obj: src/scml_memory_base.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_base.obj -MD -MP -MF "$(DEPDIR)/scml_memory_base.Tpo" -c -o scml_memory_base.obj `if test -f 'src/scml_memory_base.cc'; then $(CYGPATH_W) 'src/scml_memory_base.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_base.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_base.Tpo" "$(DEPDIR)/scml_memory_base.Po"; else rm -f "$(DEPDIR)/scml_memory_base.Tpo"; exit 1; fi
#	source='src/scml_memory_base.cc' object='scml_memory_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_base.obj `if test -f 'src/scml_memory_base.cc'; then $(CYGPATH_W) 'src/scml_memory_base.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_base.cc'; fi`

scml_memory_utils.o: src/scml_memory_utils.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_utils.o -MD -MP -MF "$(DEPDIR)/scml_memory_utils.Tpo" -c -o scml_memory_utils.o `test -f 'src/scml_memory_utils.cc' || echo '$(srcdir)/'`src/scml_memory_utils.cc; \
	then mv -f "$(DEPDIR)/scml_memory_utils.Tpo" "$(DEPDIR)/scml_memory_utils.Po"; else rm -f "$(DEPDIR)/scml_memory_utils.Tpo"; exit 1; fi
#	source='src/scml_memory_utils.cc' object='scml_memory_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_utils.o `test -f 'src/scml_memory_utils.cc' || echo '$(srcdir)/'`src/scml_memory_utils.cc

scml_memory_utils.obj: src/scml_memory_utils.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_utils.obj -MD -MP -MF "$(DEPDIR)/scml_memory_utils.Tpo" -c -o scml_memory_utils.obj `if test -f 'src/scml_memory_utils.cc'; then $(CYGPATH_W) 'src/scml_memory_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_utils.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_utils.Tpo" "$(DEPDIR)/scml_memory_utils.Po"; else rm -f "$(DEPDIR)/scml_memory_utils.Tpo"; exit 1; fi
#	source='src/scml_memory_utils.cc' object='scml_memory_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_utils.obj `if test -f 'src/scml_memory_utils.cc'; then $(CYGPATH_W) 'src/scml_memory_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_utils.cc'; fi`

scml_memory_registration.o: src/scml_memory_registration.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_registration.o -MD -MP -MF "$(DEPDIR)/scml_memory_registration.Tpo" -c -o scml_memory_registration.o `test -f 'src/scml_memory_registration.cc' || echo '$(srcdir)/'`src/scml_memory_registration.cc; \
	then mv -f "$(DEPDIR)/scml_memory_registration.Tpo" "$(DEPDIR)/scml_memory_registration.Po"; else rm -f "$(DEPDIR)/scml_memory_registration.Tpo"; exit 1; fi
#	source='src/scml_memory_registration.cc' object='scml_memory_registration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_registration.o `test -f 'src/scml_memory_registration.cc' || echo '$(srcdir)/'`src/scml_memory_registration.cc

scml_memory_registration.obj: src/scml_memory_registration.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_registration.obj -MD -MP -MF "$(DEPDIR)/scml_memory_registration.Tpo" -c -o scml_memory_registration.obj `if test -f 'src/scml_memory_registration.cc'; then $(CYGPATH_W) 'src/scml_memory_registration.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_registration.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_registration.Tpo" "$(DEPDIR)/scml_memory_registration.Po"; else rm -f "$(DEPDIR)/scml_memory_registration.Tpo"; exit 1; fi
#	source='src/scml_memory_registration.cc' object='scml_memory_registration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_registration.obj `if test -f 'src/scml_memory_registration.cc'; then $(CYGPATH_W) 'src/scml_memory_registration.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_registration.cc'; fi`

scml_memory_user.o: src/scml_memory_user.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_user.o -MD -MP -MF "$(DEPDIR)/scml_memory_user.Tpo" -c -o scml_memory_user.o `test -f 'src/scml_memory_user.cc' || echo '$(srcdir)/'`src/scml_memory_user.cc; \
	then mv -f "$(DEPDIR)/scml_memory_user.Tpo" "$(DEPDIR)/scml_memory_user.Po"; else rm -f "$(DEPDIR)/scml_memory_user.Tpo"; exit 1; fi
#	source='src/scml_memory_user.cc' object='scml_memory_user.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_user.o `test -f 'src/scml_memory_user.cc' || echo '$(srcdir)/'`src/scml_memory_user.cc

scml_memory_user.obj: src/scml_memory_user.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_user.obj -MD -MP -MF "$(DEPDIR)/scml_memory_user.Tpo" -c -o scml_memory_user.obj `if test -f 'src/scml_memory_user.cc'; then $(CYGPATH_W) 'src/scml_memory_user.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_user.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_user.Tpo" "$(DEPDIR)/scml_memory_user.Po"; else rm -f "$(DEPDIR)/scml_memory_user.Tpo"; exit 1; fi
#	source='src/scml_memory_user.cc' object='scml_memory_user.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_user.obj `if test -f 'src/scml_memory_user.cc'; then $(CYGPATH_W) 'src/scml_memory_user.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_user.cc'; fi`

scml_memory_operations_podt_common.o: src/scml_memory_operations_podt_common.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_podt_common.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_podt_common.Tpo" -c -o scml_memory_operations_podt_common.o `test -f 'src/scml_memory_operations_podt_common.cc' || echo '$(srcdir)/'`src/scml_memory_operations_podt_common.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_podt_common.Tpo" "$(DEPDIR)/scml_memory_operations_podt_common.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_podt_common.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_podt_common.cc' object='scml_memory_operations_podt_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_podt_common.o `test -f 'src/scml_memory_operations_podt_common.cc' || echo '$(srcdir)/'`src/scml_memory_operations_podt_common.cc

scml_memory_operations_podt_common.obj: src/scml_memory_operations_podt_common.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_podt_common.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_podt_common.Tpo" -c -o scml_memory_operations_podt_common.obj `if test -f 'src/scml_memory_operations_podt_common.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_podt_common.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_podt_common.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_podt_common.Tpo" "$(DEPDIR)/scml_memory_operations_podt_common.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_podt_common.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_podt_common.cc' object='scml_memory_operations_podt_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_podt_common.obj `if test -f 'src/scml_memory_operations_podt_common.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_podt_common.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_podt_common.cc'; fi`

scml_memory_operations_pts_bool.o: src/scml_memory_operations_pts_bool.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_bool.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_bool.Tpo" -c -o scml_memory_operations_pts_bool.o `test -f 'src/scml_memory_operations_pts_bool.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_bool.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_bool.Tpo" "$(DEPDIR)/scml_memory_operations_pts_bool.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_bool.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_bool.cc' object='scml_memory_operations_pts_bool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_bool.o `test -f 'src/scml_memory_operations_pts_bool.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_bool.cc

scml_memory_operations_pts_bool.obj: src/scml_memory_operations_pts_bool.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_bool.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_bool.Tpo" -c -o scml_memory_operations_pts_bool.obj `if test -f 'src/scml_memory_operations_pts_bool.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_bool.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_bool.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_bool.Tpo" "$(DEPDIR)/scml_memory_operations_pts_bool.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_bool.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_bool.cc' object='scml_memory_operations_pts_bool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_bool.obj `if test -f 'src/scml_memory_operations_pts_bool.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_bool.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_bool.cc'; fi`

scml_memory_operations_pts_char.o: src/scml_memory_operations_pts_char.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_char.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_char.Tpo" -c -o scml_memory_operations_pts_char.o `test -f 'src/scml_memory_operations_pts_char.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_char.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_char.Tpo" "$(DEPDIR)/scml_memory_operations_pts_char.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_char.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_char.cc' object='scml_memory_operations_pts_char.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_char.o `test -f 'src/scml_memory_operations_pts_char.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_char.cc

scml_memory_operations_pts_char.obj: src/scml_memory_operations_pts_char.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_char.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_char.Tpo" -c -o scml_memory_operations_pts_char.obj `if test -f 'src/scml_memory_operations_pts_char.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_char.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_char.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_char.Tpo" "$(DEPDIR)/scml_memory_operations_pts_char.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_char.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_char.cc' object='scml_memory_operations_pts_char.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_char.obj `if test -f 'src/scml_memory_operations_pts_char.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_char.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_char.cc'; fi`

scml_memory_operations_pts_signed_char.o: src/scml_memory_operations_pts_signed_char.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_signed_char.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_signed_char.Tpo" -c -o scml_memory_operations_pts_signed_char.o `test -f 'src/scml_memory_operations_pts_signed_char.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_signed_char.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_signed_char.Tpo" "$(DEPDIR)/scml_memory_operations_pts_signed_char.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_signed_char.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_signed_char.cc' object='scml_memory_operations_pts_signed_char.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_signed_char.o `test -f 'src/scml_memory_operations_pts_signed_char.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_signed_char.cc

scml_memory_operations_pts_signed_char.obj: src/scml_memory_operations_pts_signed_char.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_signed_char.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_signed_char.Tpo" -c -o scml_memory_operations_pts_signed_char.obj `if test -f 'src/scml_memory_operations_pts_signed_char.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_signed_char.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_signed_char.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_signed_char.Tpo" "$(DEPDIR)/scml_memory_operations_pts_signed_char.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_signed_char.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_signed_char.cc' object='scml_memory_operations_pts_signed_char.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_signed_char.obj `if test -f 'src/scml_memory_operations_pts_signed_char.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_signed_char.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_signed_char.cc'; fi`

scml_memory_operations_pts_signed_int.o: src/scml_memory_operations_pts_signed_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_signed_int.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_signed_int.Tpo" -c -o scml_memory_operations_pts_signed_int.o `test -f 'src/scml_memory_operations_pts_signed_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_signed_int.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_signed_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_signed_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_signed_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_signed_int.cc' object='scml_memory_operations_pts_signed_int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_signed_int.o `test -f 'src/scml_memory_operations_pts_signed_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_signed_int.cc

scml_memory_operations_pts_signed_int.obj: src/scml_memory_operations_pts_signed_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_signed_int.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_signed_int.Tpo" -c -o scml_memory_operations_pts_signed_int.obj `if test -f 'src/scml_memory_operations_pts_signed_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_signed_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_signed_int.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_signed_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_signed_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_signed_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_signed_int.cc' object='scml_memory_operations_pts_signed_int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_signed_int.obj `if test -f 'src/scml_memory_operations_pts_signed_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_signed_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_signed_int.cc'; fi`

scml_memory_operations_pts_signed_long_int.o: src/scml_memory_operations_pts_signed_long_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_signed_long_int.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_signed_long_int.Tpo" -c -o scml_memory_operations_pts_signed_long_int.o `test -f 'src/scml_memory_operations_pts_signed_long_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_signed_long_int.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_signed_long_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_signed_long_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_signed_long_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_signed_long_int.cc' object='scml_memory_operations_pts_signed_long_int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_signed_long_int.o `test -f 'src/scml_memory_operations_pts_signed_long_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_signed_long_int.cc

scml_memory_operations_pts_signed_long_int.obj: src/scml_memory_operations_pts_signed_long_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_signed_long_int.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_signed_long_int.Tpo" -c -o scml_memory_operations_pts_signed_long_int.obj `if test -f 'src/scml_memory_operations_pts_signed_long_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_signed_long_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_signed_long_int.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_signed_long_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_signed_long_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_signed_long_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_signed_long_int.cc' object='scml_memory_operations_pts_signed_long_int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_signed_long_int.obj `if test -f 'src/scml_memory_operations_pts_signed_long_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_signed_long_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_signed_long_int.cc'; fi`

scml_memory_operations_pts_signed_long_long.o: src/scml_memory_operations_pts_signed_long_long.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_signed_long_long.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_signed_long_long.Tpo" -c -o scml_memory_operations_pts_signed_long_long.o `test -f 'src/scml_memory_operations_pts_signed_long_long.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_signed_long_long.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_signed_long_long.Tpo" "$(DEPDIR)/scml_memory_operations_pts_signed_long_long.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_signed_long_long.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_signed_long_long.cc' object='scml_memory_operations_pts_signed_long_long.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_signed_long_long.o `test -f 'src/scml_memory_operations_pts_signed_long_long.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_signed_long_long.cc

scml_memory_operations_pts_signed_long_long.obj: src/scml_memory_operations_pts_signed_long_long.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_signed_long_long.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_signed_long_long.Tpo" -c -o scml_memory_operations_pts_signed_long_long.obj `if test -f 'src/scml_memory_operations_pts_signed_long_long.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_signed_long_long.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_signed_long_long.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_signed_long_long.Tpo" "$(DEPDIR)/scml_memory_operations_pts_signed_long_long.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_signed_long_long.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_signed_long_long.cc' object='scml_memory_operations_pts_signed_long_long.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_signed_long_long.obj `if test -f 'src/scml_memory_operations_pts_signed_long_long.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_signed_long_long.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_signed_long_long.cc'; fi`

scml_memory_operations_pts_signed_short_int.o: src/scml_memory_operations_pts_signed_short_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_signed_short_int.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_signed_short_int.Tpo" -c -o scml_memory_operations_pts_signed_short_int.o `test -f 'src/scml_memory_operations_pts_signed_short_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_signed_short_int.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_signed_short_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_signed_short_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_signed_short_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_signed_short_int.cc' object='scml_memory_operations_pts_signed_short_int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_signed_short_int.o `test -f 'src/scml_memory_operations_pts_signed_short_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_signed_short_int.cc

scml_memory_operations_pts_signed_short_int.obj: src/scml_memory_operations_pts_signed_short_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_signed_short_int.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_signed_short_int.Tpo" -c -o scml_memory_operations_pts_signed_short_int.obj `if test -f 'src/scml_memory_operations_pts_signed_short_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_signed_short_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_signed_short_int.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_signed_short_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_signed_short_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_signed_short_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_signed_short_int.cc' object='scml_memory_operations_pts_signed_short_int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_signed_short_int.obj `if test -f 'src/scml_memory_operations_pts_signed_short_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_signed_short_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_signed_short_int.cc'; fi`

scml_memory_operations_pts_unsigned_char.o: src/scml_memory_operations_pts_unsigned_char.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_unsigned_char.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_unsigned_char.Tpo" -c -o scml_memory_operations_pts_unsigned_char.o `test -f 'src/scml_memory_operations_pts_unsigned_char.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_unsigned_char.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_char.Tpo" "$(DEPDIR)/scml_memory_operations_pts_unsigned_char.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_char.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_unsigned_char.cc' object='scml_memory_operations_pts_unsigned_char.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_unsigned_char.o `test -f 'src/scml_memory_operations_pts_unsigned_char.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_unsigned_char.cc

scml_memory_operations_pts_unsigned_char.obj: src/scml_memory_operations_pts_unsigned_char.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_unsigned_char.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_unsigned_char.Tpo" -c -o scml_memory_operations_pts_unsigned_char.obj `if test -f 'src/scml_memory_operations_pts_unsigned_char.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_unsigned_char.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_unsigned_char.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_char.Tpo" "$(DEPDIR)/scml_memory_operations_pts_unsigned_char.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_char.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_unsigned_char.cc' object='scml_memory_operations_pts_unsigned_char.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_unsigned_char.obj `if test -f 'src/scml_memory_operations_pts_unsigned_char.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_unsigned_char.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_unsigned_char.cc'; fi`

scml_memory_operations_pts_unsigned_int.o: src/scml_memory_operations_pts_unsigned_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_unsigned_int.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_unsigned_int.Tpo" -c -o scml_memory_operations_pts_unsigned_int.o `test -f 'src/scml_memory_operations_pts_unsigned_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_unsigned_int.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_unsigned_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_unsigned_int.cc' object='scml_memory_operations_pts_unsigned_int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_unsigned_int.o `test -f 'src/scml_memory_operations_pts_unsigned_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_unsigned_int.cc

scml_memory_operations_pts_unsigned_int.obj: src/scml_memory_operations_pts_unsigned_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_unsigned_int.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_unsigned_int.Tpo" -c -o scml_memory_operations_pts_unsigned_int.obj `if test -f 'src/scml_memory_operations_pts_unsigned_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_unsigned_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_unsigned_int.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_unsigned_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_unsigned_int.cc' object='scml_memory_operations_pts_unsigned_int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_unsigned_int.obj `if test -f 'src/scml_memory_operations_pts_unsigned_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_unsigned_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_unsigned_int.cc'; fi`

scml_memory_operations_pts_unsigned_long_int.o: src/scml_memory_operations_pts_unsigned_long_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_unsigned_long_int.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_int.Tpo" -c -o scml_memory_operations_pts_unsigned_long_int.o `test -f 'src/scml_memory_operations_pts_unsigned_long_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_unsigned_long_int.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_unsigned_long_int.cc' object='scml_memory_operations_pts_unsigned_long_int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_unsigned_long_int.o `test -f 'src/scml_memory_operations_pts_unsigned_long_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_unsigned_long_int.cc

scml_memory_operations_pts_unsigned_long_int.obj: src/scml_memory_operations_pts_unsigned_long_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_unsigned_long_int.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_int.Tpo" -c -o scml_memory_operations_pts_unsigned_long_int.obj `if test -f 'src/scml_memory_operations_pts_unsigned_long_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_unsigned_long_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_unsigned_long_int.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_unsigned_long_int.cc' object='scml_memory_operations_pts_unsigned_long_int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_unsigned_long_int.obj `if test -f 'src/scml_memory_operations_pts_unsigned_long_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_unsigned_long_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_unsigned_long_int.cc'; fi`

scml_memory_operations_pts_unsigned_long_long.o: src/scml_memory_operations_pts_unsigned_long_long.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_unsigned_long_long.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_long.Tpo" -c -o scml_memory_operations_pts_unsigned_long_long.o `test -f 'src/scml_memory_operations_pts_unsigned_long_long.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_unsigned_long_long.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_long.Tpo" "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_long.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_long.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_unsigned_long_long.cc' object='scml_memory_operations_pts_unsigned_long_long.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_unsigned_long_long.o `test -f 'src/scml_memory_operations_pts_unsigned_long_long.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_unsigned_long_long.cc

scml_memory_operations_pts_unsigned_long_long.obj: src/scml_memory_operations_pts_unsigned_long_long.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_unsigned_long_long.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_long.Tpo" -c -o scml_memory_operations_pts_unsigned_long_long.obj `if test -f 'src/scml_memory_operations_pts_unsigned_long_long.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_unsigned_long_long.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_unsigned_long_long.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_long.Tpo" "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_long.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_long_long.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_unsigned_long_long.cc' object='scml_memory_operations_pts_unsigned_long_long.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_unsigned_long_long.obj `if test -f 'src/scml_memory_operations_pts_unsigned_long_long.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_unsigned_long_long.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_unsigned_long_long.cc'; fi`

scml_memory_operations_pts_unsigned_short_int.o: src/scml_memory_operations_pts_unsigned_short_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_unsigned_short_int.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_unsigned_short_int.Tpo" -c -o scml_memory_operations_pts_unsigned_short_int.o `test -f 'src/scml_memory_operations_pts_unsigned_short_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_unsigned_short_int.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_short_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_unsigned_short_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_short_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_unsigned_short_int.cc' object='scml_memory_operations_pts_unsigned_short_int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_unsigned_short_int.o `test -f 'src/scml_memory_operations_pts_unsigned_short_int.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_unsigned_short_int.cc

scml_memory_operations_pts_unsigned_short_int.obj: src/scml_memory_operations_pts_unsigned_short_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_unsigned_short_int.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_unsigned_short_int.Tpo" -c -o scml_memory_operations_pts_unsigned_short_int.obj `if test -f 'src/scml_memory_operations_pts_unsigned_short_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_unsigned_short_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_unsigned_short_int.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_short_int.Tpo" "$(DEPDIR)/scml_memory_operations_pts_unsigned_short_int.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_unsigned_short_int.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_unsigned_short_int.cc' object='scml_memory_operations_pts_unsigned_short_int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_unsigned_short_int.obj `if test -f 'src/scml_memory_operations_pts_unsigned_short_int.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_unsigned_short_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_unsigned_short_int.cc'; fi`

scml_property.o: src/scml_property.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_property.o -MD -MP -MF "$(DEPDIR)/scml_property.Tpo" -c -o scml_property.o `test -f 'src/scml_property.cc' || echo '$(srcdir)/'`src/scml_property.cc; \
	then mv -f "$(DEPDIR)/scml_property.Tpo" "$(DEPDIR)/scml_property.Po"; else rm -f "$(DEPDIR)/scml_property.Tpo"; exit 1; fi
#	source='src/scml_property.cc' object='scml_property.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_property.o `test -f 'src/scml_property.cc' || echo '$(srcdir)/'`src/scml_property.cc

scml_property.obj: src/scml_property.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_property.obj -MD -MP -MF "$(DEPDIR)/scml_property.Tpo" -c -o scml_property.obj `if test -f 'src/scml_property.cc'; then $(CYGPATH_W) 'src/scml_property.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_property.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_property.Tpo" "$(DEPDIR)/scml_property.Po"; else rm -f "$(DEPDIR)/scml_property.Tpo"; exit 1; fi
#	source='src/scml_property.cc' object='scml_property.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_property.obj `if test -f 'src/scml_property.cc'; then $(CYGPATH_W) 'src/scml_property.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_property.cc'; fi`

scml_property_server_if.o: src/scml_property_server_if.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_property_server_if.o -MD -MP -MF "$(DEPDIR)/scml_property_server_if.Tpo" -c -o scml_property_server_if.o `test -f 'src/scml_property_server_if.cc' || echo '$(srcdir)/'`src/scml_property_server_if.cc; \
	then mv -f "$(DEPDIR)/scml_property_server_if.Tpo" "$(DEPDIR)/scml_property_server_if.Po"; else rm -f "$(DEPDIR)/scml_property_server_if.Tpo"; exit 1; fi
#	source='src/scml_property_server_if.cc' object='scml_property_server_if.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_property_server_if.o `test -f 'src/scml_property_server_if.cc' || echo '$(srcdir)/'`src/scml_property_server_if.cc

scml_property_server_if.obj: src/scml_property_server_if.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_property_server_if.obj -MD -MP -MF "$(DEPDIR)/scml_property_server_if.Tpo" -c -o scml_property_server_if.obj `if test -f 'src/scml_property_server_if.cc'; then $(CYGPATH_W) 'src/scml_property_server_if.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_property_server_if.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_property_server_if.Tpo" "$(DEPDIR)/scml_property_server_if.Po"; else rm -f "$(DEPDIR)/scml_property_server_if.Tpo"; exit 1; fi
#	source='src/scml_property_server_if.cc' object='scml_property_server_if.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_property_server_if.obj `if test -f 'src/scml_property_server_if.cc'; then $(CYGPATH_W) 'src/scml_property_server_if.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_property_server_if.cc'; fi`

scml_property_registry.o: src/scml_property_registry.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_property_registry.o -MD -MP -MF "$(DEPDIR)/scml_property_registry.Tpo" -c -o scml_property_registry.o `test -f 'src/scml_property_registry.cc' || echo '$(srcdir)/'`src/scml_property_registry.cc; \
	then mv -f "$(DEPDIR)/scml_property_registry.Tpo" "$(DEPDIR)/scml_property_registry.Po"; else rm -f "$(DEPDIR)/scml_property_registry.Tpo"; exit 1; fi
#	source='src/scml_property_registry.cc' object='scml_property_registry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_property_registry.o `test -f 'src/scml_property_registry.cc' || echo '$(srcdir)/'`src/scml_property_registry.cc

scml_property_registry.obj: src/scml_property_registry.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_property_registry.obj -MD -MP -MF "$(DEPDIR)/scml_property_registry.Tpo" -c -o scml_property_registry.obj `if test -f 'src/scml_property_registry.cc'; then $(CYGPATH_W) 'src/scml_property_registry.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_property_registry.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_property_registry.Tpo" "$(DEPDIR)/scml_property_registry.Po"; else rm -f "$(DEPDIR)/scml_property_registry.Tpo"; exit 1; fi
#	source='src/scml_property_registry.cc' object='scml_property_registry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_property_registry.obj `if test -f 'src/scml_property_registry.cc'; then $(CYGPATH_W) 'src/scml_property_registry.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_property_registry.cc'; fi`

scml_simple_property_server.o: src/scml_simple_property_server.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_simple_property_server.o -MD -MP -MF "$(DEPDIR)/scml_simple_property_server.Tpo" -c -o scml_simple_property_server.o `test -f 'src/scml_simple_property_server.cc' || echo '$(srcdir)/'`src/scml_simple_property_server.cc; \
	then mv -f "$(DEPDIR)/scml_simple_property_server.Tpo" "$(DEPDIR)/scml_simple_property_server.Po"; else rm -f "$(DEPDIR)/scml_simple_property_server.Tpo"; exit 1; fi
#	source='src/scml_simple_property_server.cc' object='scml_simple_property_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_simple_property_server.o `test -f 'src/scml_simple_property_server.cc' || echo '$(srcdir)/'`src/scml_simple_property_server.cc

scml_simple_property_server.obj: src/scml_simple_property_server.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_simple_property_server.obj -MD -MP -MF "$(DEPDIR)/scml_simple_property_server.Tpo" -c -o scml_simple_property_server.obj `if test -f 'src/scml_simple_property_server.cc'; then $(CYGPATH_W) 'src/scml_simple_property_server.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_simple_property_server.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_simple_property_server.Tpo" "$(DEPDIR)/scml_simple_property_server.Po"; else rm -f "$(DEPDIR)/scml_simple_property_server.Tpo"; exit 1; fi
#	source='src/scml_simple_property_server.cc' object='scml_simple_property_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_simple_property_server.obj `if test -f 'src/scml_simple_property_server.cc'; then $(CYGPATH_W) 'src/scml_simple_property_server.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_simple_property_server.cc'; fi`

scml_inmemory_property_server.o: src/scml_inmemory_property_server.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_inmemory_property_server.o -MD -MP -MF "$(DEPDIR)/scml_inmemory_property_server.Tpo" -c -o scml_inmemory_property_server.o `test -f 'src/scml_inmemory_property_server.cc' || echo '$(srcdir)/'`src/scml_inmemory_property_server.cc; \
	then mv -f "$(DEPDIR)/scml_inmemory_property_server.Tpo" "$(DEPDIR)/scml_inmemory_property_server.Po"; else rm -f "$(DEPDIR)/scml_inmemory_property_server.Tpo"; exit 1; fi
#	source='src/scml_inmemory_property_server.cc' object='scml_inmemory_property_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_inmemory_property_server.o `test -f 'src/scml_inmemory_property_server.cc' || echo '$(srcdir)/'`src/scml_inmemory_property_server.cc

scml_inmemory_property_server.obj: src/scml_inmemory_property_server.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_inmemory_property_server.obj -MD -MP -MF "$(DEPDIR)/scml_inmemory_property_server.Tpo" -c -o scml_inmemory_property_server.obj `if test -f 'src/scml_inmemory_property_server.cc'; then $(CYGPATH_W) 'src/scml_inmemory_property_server.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_inmemory_property_server.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_inmemory_property_server.Tpo" "$(DEPDIR)/scml_inmemory_property_server.Po"; else rm -f "$(DEPDIR)/scml_inmemory_property_server.Tpo"; exit 1; fi
#	source='src/scml_inmemory_property_server.cc' object='scml_inmemory_property_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_inmemory_property_server.obj `if test -f 'src/scml_inmemory_property_server.cc'; then $(CYGPATH_W) 'src/scml_inmemory_property_server.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_inmemory_property_server.cc'; fi`

scml_memory_map_facade.o: src/scml_memory_map_facade.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_map_facade.o -MD -MP -MF "$(DEPDIR)/scml_memory_map_facade.Tpo" -c -o scml_memory_map_facade.o `test -f 'src/scml_memory_map_facade.cc' || echo '$(srcdir)/'`src/scml_memory_map_facade.cc; \
	then mv -f "$(DEPDIR)/scml_memory_map_facade.Tpo" "$(DEPDIR)/scml_memory_map_facade.Po"; else rm -f "$(DEPDIR)/scml_memory_map_facade.Tpo"; exit 1; fi
#	source='src/scml_memory_map_facade.cc' object='scml_memory_map_facade.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_map_facade.o `test -f 'src/scml_memory_map_facade.cc' || echo '$(srcdir)/'`src/scml_memory_map_facade.cc

scml_memory_map_facade.obj: src/scml_memory_map_facade.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_map_facade.obj -MD -MP -MF "$(DEPDIR)/scml_memory_map_facade.Tpo" -c -o scml_memory_map_facade.obj `if test -f 'src/scml_memory_map_facade.cc'; then $(CYGPATH_W) 'src/scml_memory_map_facade.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_map_facade.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_map_facade.Tpo" "$(DEPDIR)/scml_memory_map_facade.Po"; else rm -f "$(DEPDIR)/scml_memory_map_facade.Tpo"; exit 1; fi
#	source='src/scml_memory_map_facade.cc' object='scml_memory_map_facade.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_map_facade.obj `if test -f 'src/scml_memory_map_facade.cc'; then $(CYGPATH_W) 'src/scml_memory_map_facade.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_map_facade.cc'; fi`

scml_synchroniser_registry.o: src/scml_synchroniser_registry.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_synchroniser_registry.o -MD -MP -MF "$(DEPDIR)/scml_synchroniser_registry.Tpo" -c -o scml_synchroniser_registry.o `test -f 'src/scml_synchroniser_registry.cc' || echo '$(srcdir)/'`src/scml_synchroniser_registry.cc; \
	then mv -f "$(DEPDIR)/scml_synchroniser_registry.Tpo" "$(DEPDIR)/scml_synchroniser_registry.Po"; else rm -f "$(DEPDIR)/scml_synchroniser_registry.Tpo"; exit 1; fi
#	source='src/scml_synchroniser_registry.cc' object='scml_synchroniser_registry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_synchroniser_registry.o `test -f 'src/scml_synchroniser_registry.cc' || echo '$(srcdir)/'`src/scml_synchroniser_registry.cc

scml_synchroniser_registry.obj: src/scml_synchroniser_registry.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_synchroniser_registry.obj -MD -MP -MF "$(DEPDIR)/scml_synchroniser_registry.Tpo" -c -o scml_synchroniser_registry.obj `if test -f 'src/scml_synchroniser_registry.cc'; then $(CYGPATH_W) 'src/scml_synchroniser_registry.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_synchroniser_registry.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_synchroniser_registry.Tpo" "$(DEPDIR)/scml_synchroniser_registry.Po"; else rm -f "$(DEPDIR)/scml_synchroniser_registry.Tpo"; exit 1; fi
#	source='src/scml_synchroniser_registry.cc' object='scml_synchroniser_registry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_synchroniser_registry.obj `if test -f 'src/scml_synchroniser_registry.cc'; then $(CYGPATH_W) 'src/scml_synchroniser_registry.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_synchroniser_registry.cc'; fi`

scml_router_operations_podt_common.o: src/scml_router_operations_podt_common.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_podt_common.o -MD -MP -MF "$(DEPDIR)/scml_router_operations_podt_common.Tpo" -c -o scml_router_operations_podt_common.o `test -f 'src/scml_router_operations_podt_common.cc' || echo '$(srcdir)/'`src/scml_router_operations_podt_common.cc; \
	then mv -f "$(DEPDIR)/scml_router_operations_podt_common.Tpo" "$(DEPDIR)/scml_router_operations_podt_common.Po"; else rm -f "$(DEPDIR)/scml_router_operations_podt_common.Tpo"; exit 1; fi
#	source='src/scml_router_operations_podt_common.cc' object='scml_router_operations_podt_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_podt_common.o `test -f 'src/scml_router_operations_podt_common.cc' || echo '$(srcdir)/'`src/scml_router_operations_podt_common.cc

scml_router_operations_podt_common.obj: src/scml_router_operations_podt_common.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_podt_common.obj -MD -MP -MF "$(DEPDIR)/scml_router_operations_podt_common.Tpo" -c -o scml_router_operations_podt_common.obj `if test -f 'src/scml_router_operations_podt_common.cc'; then $(CYGPATH_W) 'src/scml_router_operations_podt_common.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_podt_common.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_router_operations_podt_common.Tpo" "$(DEPDIR)/scml_router_operations_podt_common.Po"; else rm -f "$(DEPDIR)/scml_router_operations_podt_common.Tpo"; exit 1; fi
#	source='src/scml_router_operations_podt_common.cc' object='scml_router_operations_podt_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_podt_common.obj `if test -f 'src/scml_router_operations_podt_common.cc'; then $(CYGPATH_W) 'src/scml_router_operations_podt_common.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_podt_common.cc'; fi`

scml_router_operations_pts_unsigned_char.o: src/scml_router_operations_pts_unsigned_char.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_unsigned_char.o -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_unsigned_char.Tpo" -c -o scml_router_operations_pts_unsigned_char.o `test -f 'src/scml_router_operations_pts_unsigned_char.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_unsigned_char.cc; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_unsigned_char.Tpo" "$(DEPDIR)/scml_router_operations_pts_unsigned_char.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_unsigned_char.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_unsigned_char.cc' object='scml_router_operations_pts_unsigned_char.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_unsigned_char.o `test -f 'src/scml_router_operations_pts_unsigned_char.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_unsigned_char.cc

scml_router_operations_pts_unsigned_char.obj: src/scml_router_operations_pts_unsigned_char.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_unsigned_char.obj -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_unsigned_char.Tpo" -c -o scml_router_operations_pts_unsigned_char.obj `if test -f 'src/scml_router_operations_pts_unsigned_char.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_unsigned_char.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_unsigned_char.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_unsigned_char.Tpo" "$(DEPDIR)/scml_router_operations_pts_unsigned_char.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_unsigned_char.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_unsigned_char.cc' object='scml_router_operations_pts_unsigned_char.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_unsigned_char.obj `if test -f 'src/scml_router_operations_pts_unsigned_char.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_unsigned_char.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_unsigned_char.cc'; fi`

scml_router_operations_pts_unsigned_int.o: src/scml_router_operations_pts_unsigned_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_unsigned_int.o -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_unsigned_int.Tpo" -c -o scml_router_operations_pts_unsigned_int.o `test -f 'src/scml_router_operations_pts_unsigned_int.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_unsigned_int.cc; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_unsigned_int.Tpo" "$(DEPDIR)/scml_router_operations_pts_unsigned_int.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_unsigned_int.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_unsigned_int.cc' object='scml_router_operations_pts_unsigned_int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_unsigned_int.o `test -f 'src/scml_router_operations_pts_unsigned_int.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_unsigned_int.cc

scml_router_operations_pts_unsigned_int.obj: src/scml_router_operations_pts_unsigned_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_unsigned_int.obj -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_unsigned_int.Tpo" -c -o scml_router_operations_pts_unsigned_int.obj `if test -f 'src/scml_router_operations_pts_unsigned_int.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_unsigned_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_unsigned_int.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_unsigned_int.Tpo" "$(DEPDIR)/scml_router_operations_pts_unsigned_int.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_unsigned_int.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_unsigned_int.cc' object='scml_router_operations_pts_unsigned_int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_unsigned_int.obj `if test -f 'src/scml_router_operations_pts_unsigned_int.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_unsigned_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_unsigned_int.cc'; fi`

scml_router_operations_pts_unsigned_long_int.o: src/scml_router_operations_pts_unsigned_long_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_unsigned_long_int.o -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_unsigned_long_int.Tpo" -c -o scml_router_operations_pts_unsigned_long_int.o `test -f 'src/scml_router_operations_pts_unsigned_long_int.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_unsigned_long_int.cc; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_unsigned_long_int.Tpo" "$(DEPDIR)/scml_router_operations_pts_unsigned_long_int.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_unsigned_long_int.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_unsigned_long_int.cc' object='scml_router_operations_pts_unsigned_long_int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_unsigned_long_int.o `test -f 'src/scml_router_operations_pts_unsigned_long_int.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_unsigned_long_int.cc

scml_router_operations_pts_unsigned_long_int.obj: src/scml_router_operations_pts_unsigned_long_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_unsigned_long_int.obj -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_unsigned_long_int.Tpo" -c -o scml_router_operations_pts_unsigned_long_int.obj `if test -f 'src/scml_router_operations_pts_unsigned_long_int.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_unsigned_long_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_unsigned_long_int.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_unsigned_long_int.Tpo" "$(DEPDIR)/scml_router_operations_pts_unsigned_long_int.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_unsigned_long_int.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_unsigned_long_int.cc' object='scml_router_operations_pts_unsigned_long_int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_unsigned_long_int.obj `if test -f 'src/scml_router_operations_pts_unsigned_long_int.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_unsigned_long_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_unsigned_long_int.cc'; fi`

scml_router_operations_pts_unsigned_long_long.o: src/scml_router_operations_pts_unsigned_long_long.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_unsigned_long_long.o -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_unsigned_long_long.Tpo" -c -o scml_router_operations_pts_unsigned_long_long.o `test -f 'src/scml_router_operations_pts_unsigned_long_long.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_unsigned_long_long.cc; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_unsigned_long_long.Tpo" "$(DEPDIR)/scml_router_operations_pts_unsigned_long_long.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_unsigned_long_long.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_unsigned_long_long.cc' object='scml_router_operations_pts_unsigned_long_long.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_unsigned_long_long.o `test -f 'src/scml_router_operations_pts_unsigned_long_long.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_unsigned_long_long.cc

scml_router_operations_pts_unsigned_long_long.obj: src/scml_router_operations_pts_unsigned_long_long.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_unsigned_long_long.obj -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_unsigned_long_long.Tpo" -c -o scml_router_operations_pts_unsigned_long_long.obj `if test -f 'src/scml_router_operations_pts_unsigned_long_long.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_unsigned_long_long.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_unsigned_long_long.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_unsigned_long_long.Tpo" "$(DEPDIR)/scml_router_operations_pts_unsigned_long_long.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_unsigned_long_long.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_unsigned_long_long.cc' object='scml_router_operations_pts_unsigned_long_long.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_unsigned_long_long.obj `if test -f 'src/scml_router_operations_pts_unsigned_long_long.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_unsigned_long_long.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_unsigned_long_long.cc'; fi`

scml_router_operations_pts_unsigned_short_int.o: src/scml_router_operations_pts_unsigned_short_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_unsigned_short_int.o -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_unsigned_short_int.Tpo" -c -o scml_router_operations_pts_unsigned_short_int.o `test -f 'src/scml_router_operations_pts_unsigned_short_int.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_unsigned_short_int.cc; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_unsigned_short_int.Tpo" "$(DEPDIR)/scml_router_operations_pts_unsigned_short_int.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_unsigned_short_int.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_unsigned_short_int.cc' object='scml_router_operations_pts_unsigned_short_int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_unsigned_short_int.o `test -f 'src/scml_router_operations_pts_unsigned_short_int.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_unsigned_short_int.cc

scml_router_operations_pts_unsigned_short_int.obj: src/scml_router_operations_pts_unsigned_short_int.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_unsigned_short_int.obj -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_unsigned_short_int.Tpo" -c -o scml_router_operations_pts_unsigned_short_int.obj `if test -f 'src/scml_router_operations_pts_unsigned_short_int.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_unsigned_short_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_unsigned_short_int.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_unsigned_short_int.Tpo" "$(DEPDIR)/scml_router_operations_pts_unsigned_short_int.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_unsigned_short_int.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_unsigned_short_int.cc' object='scml_router_operations_pts_unsigned_short_int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_unsigned_short_int.obj `if test -f 'src/scml_router_operations_pts_unsigned_short_int.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_unsigned_short_int.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_unsigned_short_int.cc'; fi`

scml_tlm2_target_adaptor_base.o: src/scml_tlm2_target_adaptor_base.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_tlm2_target_adaptor_base.o -MD -MP -MF "$(DEPDIR)/scml_tlm2_target_adaptor_base.Tpo" -c -o scml_tlm2_target_adaptor_base.o `test -f 'src/scml_tlm2_target_adaptor_base.cc' || echo '$(srcdir)/'`src/scml_tlm2_target_adaptor_base.cc; \
	then mv -f "$(DEPDIR)/scml_tlm2_target_adaptor_base.Tpo" "$(DEPDIR)/scml_tlm2_target_adaptor_base.Po"; else rm -f "$(DEPDIR)/scml_tlm2_target_adaptor_base.Tpo"; exit 1; fi
#	source='src/scml_tlm2_target_adaptor_base.cc' object='scml_tlm2_target_adaptor_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_tlm2_target_adaptor_base.o `test -f 'src/scml_tlm2_target_adaptor_base.cc' || echo '$(srcdir)/'`src/scml_tlm2_target_adaptor_base.cc

scml_tlm2_target_adaptor_base.obj: src/scml_tlm2_target_adaptor_base.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_tlm2_target_adaptor_base.obj -MD -MP -MF "$(DEPDIR)/scml_tlm2_target_adaptor_base.Tpo" -c -o scml_tlm2_target_adaptor_base.obj `if test -f 'src/scml_tlm2_target_adaptor_base.cc'; then $(CYGPATH_W) 'src/scml_tlm2_target_adaptor_base.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_tlm2_target_adaptor_base.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_tlm2_target_adaptor_base.Tpo" "$(DEPDIR)/scml_tlm2_target_adaptor_base.Po"; else rm -f "$(DEPDIR)/scml_tlm2_target_adaptor_base.Tpo"; exit 1; fi
#	source='src/scml_tlm2_target_adaptor_base.cc' object='scml_tlm2_target_adaptor_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_tlm2_target_adaptor_base.obj `if test -f 'src/scml_tlm2_target_adaptor_base.cc'; then $(CYGPATH_W) 'src/scml_tlm2_target_adaptor_base.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_tlm2_target_adaptor_base.cc'; fi`

scml_tlm2_initiator_adaptor_base.o: src/scml_tlm2_initiator_adaptor_base.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_tlm2_initiator_adaptor_base.o -MD -MP -MF "$(DEPDIR)/scml_tlm2_initiator_adaptor_base.Tpo" -c -o scml_tlm2_initiator_adaptor_base.o `test -f 'src/scml_tlm2_initiator_adaptor_base.cc' || echo '$(srcdir)/'`src/scml_tlm2_initiator_adaptor_base.cc; \
	then mv -f "$(DEPDIR)/scml_tlm2_initiator_adaptor_base.Tpo" "$(DEPDIR)/scml_tlm2_initiator_adaptor_base.Po"; else rm -f "$(DEPDIR)/scml_tlm2_initiator_adaptor_base.Tpo"; exit 1; fi
#	source='src/scml_tlm2_initiator_adaptor_base.cc' object='scml_tlm2_initiator_adaptor_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_tlm2_initiator_adaptor_base.o `test -f 'src/scml_tlm2_initiator_adaptor_base.cc' || echo '$(srcdir)/'`src/scml_tlm2_initiator_adaptor_base.cc

scml_tlm2_initiator_adaptor_base.obj: src/scml_tlm2_initiator_adaptor_base.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_tlm2_initiator_adaptor_base.obj -MD -MP -MF "$(DEPDIR)/scml_tlm2_initiator_adaptor_base.Tpo" -c -o scml_tlm2_initiator_adaptor_base.obj `if test -f 'src/scml_tlm2_initiator_adaptor_base.cc'; then $(CYGPATH_W) 'src/scml_tlm2_initiator_adaptor_base.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_tlm2_initiator_adaptor_base.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_tlm2_initiator_adaptor_base.Tpo" "$(DEPDIR)/scml_tlm2_initiator_adaptor_base.Po"; else rm -f "$(DEPDIR)/scml_tlm2_initiator_adaptor_base.Tpo"; exit 1; fi
#	source='src/scml_tlm2_initiator_adaptor_base.cc' object='scml_tlm2_initiator_adaptor_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_tlm2_initiator_adaptor_base.obj `if test -f 'src/scml_tlm2_initiator_adaptor_base.cc'; then $(CYGPATH_W) 'src/scml_tlm2_initiator_adaptor_base.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_tlm2_initiator_adaptor_base.cc'; fi`

scml_memory_operations_pts_sc_biguint_n.o: src/scml_memory_operations_pts_sc_biguint_n.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_sc_biguint_n.o -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_sc_biguint_n.Tpo" -c -o scml_memory_operations_pts_sc_biguint_n.o `test -f 'src/scml_memory_operations_pts_sc_biguint_n.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_sc_biguint_n.cc; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_sc_biguint_n.Tpo" "$(DEPDIR)/scml_memory_operations_pts_sc_biguint_n.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_sc_biguint_n.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_sc_biguint_n.cc' object='scml_memory_operations_pts_sc_biguint_n.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_sc_biguint_n.o `test -f 'src/scml_memory_operations_pts_sc_biguint_n.cc' || echo '$(srcdir)/'`src/scml_memory_operations_pts_sc_biguint_n.cc

scml_memory_operations_pts_sc_biguint_n.obj: src/scml_memory_operations_pts_sc_biguint_n.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_memory_operations_pts_sc_biguint_n.obj -MD -MP -MF "$(DEPDIR)/scml_memory_operations_pts_sc_biguint_n.Tpo" -c -o scml_memory_operations_pts_sc_biguint_n.obj `if test -f 'src/scml_memory_operations_pts_sc_biguint_n.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_sc_biguint_n.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_sc_biguint_n.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_memory_operations_pts_sc_biguint_n.Tpo" "$(DEPDIR)/scml_memory_operations_pts_sc_biguint_n.Po"; else rm -f "$(DEPDIR)/scml_memory_operations_pts_sc_biguint_n.Tpo"; exit 1; fi
#	source='src/scml_memory_operations_pts_sc_biguint_n.cc' object='scml_memory_operations_pts_sc_biguint_n.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_memory_operations_pts_sc_biguint_n.obj `if test -f 'src/scml_memory_operations_pts_sc_biguint_n.cc'; then $(CYGPATH_W) 'src/scml_memory_operations_pts_sc_biguint_n.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_memory_operations_pts_sc_biguint_n.cc'; fi`

scml_router_operations_pts_sc_biguint_n.o: src/scml_router_operations_pts_sc_biguint_n.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_sc_biguint_n.o -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_sc_biguint_n.Tpo" -c -o scml_router_operations_pts_sc_biguint_n.o `test -f 'src/scml_router_operations_pts_sc_biguint_n.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_sc_biguint_n.cc; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_sc_biguint_n.Tpo" "$(DEPDIR)/scml_router_operations_pts_sc_biguint_n.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_sc_biguint_n.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_sc_biguint_n.cc' object='scml_router_operations_pts_sc_biguint_n.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_sc_biguint_n.o `test -f 'src/scml_router_operations_pts_sc_biguint_n.cc' || echo '$(srcdir)/'`src/scml_router_operations_pts_sc_biguint_n.cc

scml_router_operations_pts_sc_biguint_n.obj: src/scml_router_operations_pts_sc_biguint_n.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_router_operations_pts_sc_biguint_n.obj -MD -MP -MF "$(DEPDIR)/scml_router_operations_pts_sc_biguint_n.Tpo" -c -o scml_router_operations_pts_sc_biguint_n.obj `if test -f 'src/scml_router_operations_pts_sc_biguint_n.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_sc_biguint_n.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_sc_biguint_n.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_router_operations_pts_sc_biguint_n.Tpo" "$(DEPDIR)/scml_router_operations_pts_sc_biguint_n.Po"; else rm -f "$(DEPDIR)/scml_router_operations_pts_sc_biguint_n.Tpo"; exit 1; fi
#	source='src/scml_router_operations_pts_sc_biguint_n.cc' object='scml_router_operations_pts_sc_biguint_n.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_router_operations_pts_sc_biguint_n.obj `if test -f 'src/scml_router_operations_pts_sc_biguint_n.cc'; then $(CYGPATH_W) 'src/scml_router_operations_pts_sc_biguint_n.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_router_operations_pts_sc_biguint_n.cc'; fi`

scml_bitfield_callback_observers.o: src/scml_bitfield_callback_observers.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_bitfield_callback_observers.o -MD -MP -MF "$(DEPDIR)/scml_bitfield_callback_observers.Tpo" -c -o scml_bitfield_callback_observers.o `test -f 'src/scml_bitfield_callback_observers.cc' || echo '$(srcdir)/'`src/scml_bitfield_callback_observers.cc; \
	then mv -f "$(DEPDIR)/scml_bitfield_callback_observers.Tpo" "$(DEPDIR)/scml_bitfield_callback_observers.Po"; else rm -f "$(DEPDIR)/scml_bitfield_callback_observers.Tpo"; exit 1; fi
#	source='src/scml_bitfield_callback_observers.cc' object='scml_bitfield_callback_observers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_bitfield_callback_observers.o `test -f 'src/scml_bitfield_callback_observers.cc' || echo '$(srcdir)/'`src/scml_bitfield_callback_observers.cc

scml_bitfield_callback_observers.obj: src/scml_bitfield_callback_observers.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_bitfield_callback_observers.obj -MD -MP -MF "$(DEPDIR)/scml_bitfield_callback_observers.Tpo" -c -o scml_bitfield_callback_observers.obj `if test -f 'src/scml_bitfield_callback_observers.cc'; then $(CYGPATH_W) 'src/scml_bitfield_callback_observers.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_bitfield_callback_observers.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_bitfield_callback_observers.Tpo" "$(DEPDIR)/scml_bitfield_callback_observers.Po"; else rm -f "$(DEPDIR)/scml_bitfield_callback_observers.Tpo"; exit 1; fi
#	source='src/scml_bitfield_callback_observers.cc' object='scml_bitfield_callback_observers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_bitfield_callback_observers.obj `if test -f 'src/scml_bitfield_callback_observers.cc'; then $(CYGPATH_W) 'src/scml_bitfield_callback_observers.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_bitfield_callback_observers.cc'; fi`

scml_mapped_ranges_observers.o: src/scml_mapped_ranges_observers.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_mapped_ranges_observers.o -MD -MP -MF "$(DEPDIR)/scml_mapped_ranges_observers.Tpo" -c -o scml_mapped_ranges_observers.o `test -f 'src/scml_mapped_ranges_observers.cc' || echo '$(srcdir)/'`src/scml_mapped_ranges_observers.cc; \
	then mv -f "$(DEPDIR)/scml_mapped_ranges_observers.Tpo" "$(DEPDIR)/scml_mapped_ranges_observers.Po"; else rm -f "$(DEPDIR)/scml_mapped_ranges_observers.Tpo"; exit 1; fi
#	source='src/scml_mapped_ranges_observers.cc' object='scml_mapped_ranges_observers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_mapped_ranges_observers.o `test -f 'src/scml_mapped_ranges_observers.cc' || echo '$(srcdir)/'`src/scml_mapped_ranges_observers.cc

scml_mapped_ranges_observers.obj: src/scml_mapped_ranges_observers.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_mapped_ranges_observers.obj -MD -MP -MF "$(DEPDIR)/scml_mapped_ranges_observers.Tpo" -c -o scml_mapped_ranges_observers.obj `if test -f 'src/scml_mapped_ranges_observers.cc'; then $(CYGPATH_W) 'src/scml_mapped_ranges_observers.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_mapped_ranges_observers.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_mapped_ranges_observers.Tpo" "$(DEPDIR)/scml_mapped_ranges_observers.Po"; else rm -f "$(DEPDIR)/scml_mapped_ranges_observers.Tpo"; exit 1; fi
#	source='src/scml_mapped_ranges_observers.cc' object='scml_mapped_ranges_observers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_mapped_ranges_observers.obj `if test -f 'src/scml_mapped_ranges_observers.cc'; then $(CYGPATH_W) 'src/scml_mapped_ranges_observers.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_mapped_ranges_observers.cc'; fi`

scml_callback_observers.o: src/scml_callback_observers.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_callback_observers.o -MD -MP -MF "$(DEPDIR)/scml_callback_observers.Tpo" -c -o scml_callback_observers.o `test -f 'src/scml_callback_observers.cc' || echo '$(srcdir)/'`src/scml_callback_observers.cc; \
	then mv -f "$(DEPDIR)/scml_callback_observers.Tpo" "$(DEPDIR)/scml_callback_observers.Po"; else rm -f "$(DEPDIR)/scml_callback_observers.Tpo"; exit 1; fi
#	source='src/scml_callback_observers.cc' object='scml_callback_observers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_callback_observers.o `test -f 'src/scml_callback_observers.cc' || echo '$(srcdir)/'`src/scml_callback_observers.cc

scml_callback_observers.obj: src/scml_callback_observers.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scml_callback_observers.obj -MD -MP -MF "$(DEPDIR)/scml_callback_observers.Tpo" -c -o scml_callback_observers.obj `if test -f 'src/scml_callback_observers.cc'; then $(CYGPATH_W) 'src/scml_callback_observers.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_callback_observers.cc'; fi`; \
	then mv -f "$(DEPDIR)/scml_callback_observers.Tpo" "$(DEPDIR)/scml_callback_observers.Po"; else rm -f "$(DEPDIR)/scml_callback_observers.Tpo"; exit 1; fi
#	source='src/scml_callback_observers.cc' object='scml_callback_observers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scml_callback_observers.obj `if test -f 'src/scml_callback_observers.cc'; then $(CYGPATH_W) 'src/scml_callback_observers.cc'; else $(CYGPATH_W) '$(srcdir)/src/scml_callback_observers.cc'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/scmlinc
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-data-local

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-local

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am uninstall-local


install-data-local:
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(INCLUDE_DIR)
	$(mkinstalldirs) $(SCMLINCLUDE_DIR)
	for file in $(noinst_HEADERS); do \
	  $(INSTALL_DATA) $(srcdir)/$$file $(INCLUDE_DIR)/$$file; \
	done
	for file in $(LNKHEADERS); do \
	  ln -f -s $(SCMLINCLUDE_DIR)/$$file $(INCLUDE_DIR)/$$file ; \
	done
	$(mkinstalldirs) $(prefix)/lib-$(TARGET_ARCH)
	$(INSTALL_DATA) $(MAIN_LIBRARY) \
	  $(prefix)/lib-$(TARGET_ARCH)/$(MAIN_LIBRARY)
	$(RANLIB) $(prefix)/lib-$(TARGET_ARCH)/$(MAIN_LIBRARY)

uninstall-local:
	@$(NORMAL_UNINSTALL)
	for file in $(noinst_HEADERS); do \
	  rm -f $(INCLUDE_DIR)/$$file; \
	done
	for file in $(LNKHEADERS); do \
	  rm -f $(INCLUDE_DIR)/$$file ; \
	done
	-rmdir $(SCMLINCLUDE_DIR)
	-rmdir $(INCLUDE_DIR)
	rm -f $(prefix)/lib-$(TARGET_ARCH)/$(MAIN_LIBRARY)
	-rmdir $(prefix)/lib-$(TARGET_ARCH)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
