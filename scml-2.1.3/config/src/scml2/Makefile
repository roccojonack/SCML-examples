# Makefile.in generated by automake 1.9.2 from Makefile.am.
# src/scml2/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




SOURCES = $(libscml2_a_SOURCES)

srcdir = ../../../src/scml2
top_srcdir = ../../..
VPATH = ../../../src/scml2
pkgdatadir = $(datadir)/package
pkglibdir = $(libdir)/package
pkgincludedir = $(includedir)/package
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = src/scml2
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libscml2_a_AR = $(AR) $(ARFLAGS)
libscml2_a_LIBADD =
am__objects_1 =
am__objects_2 = abstraction_level_switch.$(OBJEXT) bitfield.$(OBJEXT) \
	bitfield_base.$(OBJEXT) bitfield_callback_observers.$(OBJEXT) \
	bitfield_disallow_debug_read_access_callback.$(OBJEXT) \
	bitfield_disallow_debug_write_access_callback.$(OBJEXT) \
	bitfield_disallow_read_access_callback.$(OBJEXT) \
	bitfield_disallow_write_access_callback.$(OBJEXT) \
	burst_unroller.$(OBJEXT) callback_observers.$(OBJEXT) \
	debug_burst_unroller.$(OBJEXT) dmi_handler.$(OBJEXT) \
	mapped_ranges_observers.$(OBJEXT) memory.$(OBJEXT) \
	memory_alias.$(OBJEXT) memory_base.$(OBJEXT) \
	memory_bitfields_callback_base.$(OBJEXT) \
	memory_bitfields_debug_callback_base.$(OBJEXT) \
	memory_bitfields_debug_read_callback.$(OBJEXT) \
	memory_bitfields_debug_write_callback.$(OBJEXT) \
	memory_bitfields_read_callback.$(OBJEXT) \
	memory_bitfields_write_callback.$(OBJEXT) \
	memory_content_observers.$(OBJEXT) \
	memory_disallow_access_callback.$(OBJEXT) \
	memory_disallow_debug_access_callback.$(OBJEXT) \
	memory_dmi.$(OBJEXT) memory_heap_storage.$(OBJEXT) \
	memory_region.$(OBJEXT) memory_region_registry.$(OBJEXT) \
	memory_storage_base.$(OBJEXT) memory_storage_creator.$(OBJEXT) \
	reg.$(OBJEXT) reset_trigger.$(OBJEXT) router.$(OBJEXT) \
	router_base.$(OBJEXT) status.$(OBJEXT) \
	status_registry.$(OBJEXT) symbolic_names.$(OBJEXT) \
	timing_annotation_registry.$(OBJEXT) \
	toplevel_memory_base.$(OBJEXT) \
	word_access_unroller_base.$(OBJEXT) \
	word_adapter_base.$(OBJEXT)
am_libscml2_a_OBJECTS = $(am__objects_1) $(am__objects_1) \
	$(am__objects_2)
libscml2_a_OBJECTS = $(am_libscml2_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libscml2_a_SOURCES)
DIST_SOURCES = $(libscml2_a_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run tar
AR_TOOL = ar cru
AS = as
AUTOCONF = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run autoconf
AUTOHEADER = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run autoheader
AUTOMAKE = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run automake-1.9
AWK = gawk
CC = g++
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -O3
COMMONINC = -DSC_USE_STD_STRING -I/p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/include  -I/p/inway/eda/opensource/systemc/2.3/systemc-install_2.3.0/libraries/Release/Linux_64/gcc_4.5.2/include -I/p/inway/eda/opensource/systemc/2.3/systemc-install_2.3.0/libraries/Release/Linux_64/gcc_4.5.2/include
COMMONLIB = -L/p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/lib-linux64 -lscml2 -lscml2_logging -lscml2_testing -L/p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/lib-linux64 -lModelingObjects -lscml2_logging -L/p/inway/eda/opensource/systemc/2.3/systemc-install_2.3.0/libraries/Release/Linux_64/gcc_4.5.2/lib-linux -lsystemc 
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -O3
CYGPATH_W = echo
DEBUG_CXXFLAGS = -g
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" 
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
EXTRA_CXXFLAGS = -Wall
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAIN_LIBRARY = libModelingObjects.a
MAKEINFO = ${SHELL} /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/missing --run makeinfo
OBJEXT = o
OPT_CXXFLAGS = -O3
OSCITLM_INC = -I/p/inway/eda/opensource/systemc/2.3/systemc-install_2.3.0/libraries/Release/Linux_64/gcc_4.5.2/include
PACKAGE = package
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
QT_ARCH = x86_64
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
SYSC_INC = -I/p/inway/eda/opensource/systemc/2.3/systemc-install_2.3.0/libraries/Release/Linux_64/gcc_4.5.2/include
TARGET_ARCH = linux64
VERSION = version
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /p/dbb/vpmuc/third_party/tools/scml-2.1.3/config
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
noinst_LIBRARIES = libscml2.a
H_FILES = \
	abstraction_level_switch_observer.h \
	autosync_callback.h \
	bitfield.h \
	bitfield_autosync_read_callback.h \
	bitfield_autosync_write_callback.h \
	bitfield_base.h \
	bitfield_callback_base.h \
	bitfield_callback_functions.h \
	bitfield_callback_functions_include.h \
	bitfield_callback_observer.h \
	bitfield_callback_observer_owner.h \
	bitfield_callback_observers.h \
	bitfield_debug_callback_base.h \
	bitfield_debug_callback_functions.h \
	bitfield_debug_mask_read_adapter.h \
	bitfield_debug_mask_read_adapter_tagged.h \
	bitfield_debug_mask_write_adapter.h \
	bitfield_debug_mask_write_adapter_tagged.h \
	bitfield_debug_read_adapter.h \
	bitfield_debug_read_adapter_tagged.h \
	bitfield_debug_read_callback.h \
	bitfield_debug_read_callback_base.h \
	bitfield_debug_write_adapter.h \
	bitfield_debug_write_adapter_tagged.h \
	bitfield_debug_write_callback.h \
	bitfield_debug_write_callback_base.h \
	bitfield_default_read_behavior_adapter.h \
	bitfield_default_write_behavior_adapter.h \
	bitfield_disallow_debug_read_access_callback.h \
	bitfield_disallow_debug_write_access_callback.h \
	bitfield_disallow_read_access_callback.h \
	bitfield_disallow_write_access_callback.h \
	bitfield_mask_read_adapter.h \
	bitfield_mask_read_adapter_tagged.h \
	bitfield_mask_write_adapter.h \
	bitfield_mask_write_adapter_tagged.h \
	bitfield_neversync_read_callback.h \
	bitfield_neversync_write_callback.h \
	bitfield_null_adapter.h \
	bitfield_on_write_adapter.h \
	bitfield_post_write_adapter.h \
	bitfield_post_write_adapter_tagged.h \
	bitfield_read_adapter.h \
	bitfield_read_adapter_tagged.h \
	bitfield_read_callback.h \
	bitfield_read_callback_base.h \
	bitfield_selfsync_read_callback.h \
	bitfield_selfsync_write_callback.h \
	bitfield_set_on_read_adapter.h \
	bitfield_store_after_read_adapter.h \
	bitfield_untimed_mask_read_adapter.h \
	bitfield_untimed_mask_read_adapter_tagged.h \
	bitfield_untimed_mask_write_adapter.h \
	bitfield_untimed_mask_write_adapter_tagged.h \
	bitfield_untimed_read_adapter.h \
	bitfield_untimed_read_adapter_tagged.h \
	bitfield_untimed_write_adapter.h \
	bitfield_untimed_write_adapter_tagged.h \
	bitfield_write_adapter.h \
	bitfield_write_adapter_tagged.h \
	bitfield_write_callback.h \
	bitfield_write_callback_base.h \
	bitfield_write_once_adapter.h \
	burst_unroller.h \
	callback_macro.h \
	callback_observer.h \
	callback_observer_owner.h \
	callback_observers.h \
	set_on_read_adapter.h \
	debug_burst_unroller.h \
	debug_callback.h \
	debug_transport_adapter.h \
	debug_transport_adapter_tagged.h \
	default_behavior_adapter.h \
	dmi_handler.h \
	initiator_socket.h \
	severity.h \
	mappable_if.h \
	thread_pool.h \
	mapped_range.h \
	mapped_ranges_observer.h \
	mapped_ranges_observer_owner.h \
	mapped_ranges_observers.h \
	memory.h \
	memory_alias.h \
	memory_base.h \
	memory_behavior_functions.h \
	memory_callback.h \
	memory_callback_base.h \
	memory_callback_functions.h \
	memory_callback_functions_include.h \
	memory_const_iterator.h \
	memory_content_observer.h \
	memory_content_observer_owner.h \
	memory_content_observers.h \
	memory_debug_callback.h \
	memory_debug_callback_base.h \
	memory_debug_callback_functions.h \
	memory_disallow_access_callback.h \
	memory_disallow_debug_access_callback.h \
	memory_dmi.h \
	memory_fast_access.h \
	memory_fast_access_impl.h \
	memory_index_reference.h \
	memory_iterator.h \
	memory_iterator_base.h \
	memory_region.h \
	memory_region_registry.h \
	memory_select_callback_base.h \
	memory_select_callback.h \
	memory_slow_access_base.h \
	neversync_callback.h \
	null_adapter.h \
	on_write_adapter.h \
	pair_signal.h \
	pin_callback.h \
	pin_callback_base.h \
	pin_callback_functions.h \
	pin_callback_tagged.h \
	post_write_adapter.h \
	post_write_adapter_tagged.h \
	quantumkeeper_if.h \
	quantumkeeper_wrapper.h \
	read_adapter.h \
	read_adapter_tagged.h \
	read_extensions_adapter.h \
        read_extensions_adapter_tagged.h \
	reg.h \
	reg_vector_creator.h \
	reset_trigger.h \
	resource.h \
	router.h \
	router_base.h \
	router_callback.h \
	router_callback_base.h \
	router_callback_functions.h \
	router_debug_callback.h \
	router_debug_callback_base.h \
	router_debug_callback_functions.h \
	scoped_reference.h \
	vector.h \
	selfsync_callback.h \
	status.h \
	status_observer.h \
	status_observer_owner.h \
	status_registry.h \
	store_after_read_adapter.h \
	stream.h \
	streams.h \
	symbolic_names.h \
	timing_annotation_registry.h \
	tlm2_gp_extensions.h \
	tlm2_gp_initiator_adapter.h \
	tlm2_gp_target_adapter.h \
	toplevel_memory_base.h \
	transport_adapter.h \
	transport_adapter_tagged.h \
	trigger_signal.h \
	types.h \
	untimed_read_adapter.h \
	untimed_read_adapter_tagged.h \
	untimed_read_extensions_adapter.h \
        untimed_read_extensions_adapter_tagged.h \
	untimed_transport_adapter.h \
	untimed_transport_adapter_tagged.h \
	untimed_word_read_adapter.h \
	untimed_word_read_adapter_tagged.h \
	untimed_word_read_extensions_adapter.h \
        untimed_word_read_extensions_adapter_tagged.h \
	untimed_word_write_adapter.h \
	untimed_word_write_adapter_tagged.h \
	untimed_word_write_extensions_adapter.h \
        untimed_word_write_extensions_adapter_tagged.h \
	untimed_write_adapter.h \
	untimed_write_adapter_tagged.h \
	untimed_write_extensions_adapter.h \
        untimed_write_extensions_adapter_tagged.h \
	utils.h \
	word_access_unroller.h \
	word_access_unroller_base.h \
	word_adapter_base.h \
	word_read_adapter.h \
	word_read_adapter_tagged.h \
	word_read_extensions_adapter.h \
        word_read_extensions_adapter_tagged.h \
	word_write_adapter.h \
	word_write_adapter_tagged.h \
	word_write_extensions_adapter.h \
        word_write_extensions_adapter_tagged.h \
	write_adapter.h \
	write_adapter_tagged.h \
	write_extensions_adapter.h \
       	write_extensions_adapter_tagged.h \
        write_once_adapter.h \
        write_once_state.h

PRIVATE_H_FILES = \
	abstraction_level_switch.h \
	bitfield_default_debug_read_callback.h \
	bitfield_default_debug_write_callback.h \
	bitfield_default_read_callback.h \
	bitfield_default_write_callback.h \
	find_alias.h \
       	memory_bitfields_callback_base.h \
	memory_bitfields_debug_callback_base.h \
	memory_bitfields_debug_read_callback.h \
	memory_bitfields_debug_write_callback.h \
	memory_bitfields_read_callback.h \
	memory_bitfields_write_callback.h \
	memory_default_callback.h \
	memory_default_debug_callback.h \
	memory_heap_storage.h \
	memory_null_callback.h \
	memory_null_debug_callback.h \
	memory_slow_access.h \
	memory_slow_access_content_observer_decorator.h \
	memory_slow_access_storage_decorator.h \
	memory_slow_access_watching_decorator.h \
	memory_storage_base.h \
	memory_storage_creator.h \
	router_null_callback.h \
	router_null_debug_callback.h

noinst_HEADERS = $(H_FILES)
CXX_FILES = \
	abstraction_level_switch.cc \
	bitfield.cc \
	bitfield_base.cc \
	bitfield_callback_observers.cc \
	bitfield_disallow_debug_read_access_callback.cc \
	bitfield_disallow_debug_write_access_callback.cc \
	bitfield_disallow_read_access_callback.cc \
	bitfield_disallow_write_access_callback.cc \
	burst_unroller.cc \
	callback_observers.cc \
	debug_burst_unroller.cc \
	dmi_handler.cc \
	mapped_ranges_observers.cc \
	memory.cc \
	memory_alias.cc \
	memory_base.cc \
	memory_bitfields_callback_base.cc \
	memory_bitfields_debug_callback_base.cc \
	memory_bitfields_debug_read_callback.cc \
	memory_bitfields_debug_write_callback.cc \
	memory_bitfields_read_callback.cc \
	memory_bitfields_write_callback.cc \
	memory_content_observers.cc \
	memory_disallow_access_callback.cc \
	memory_disallow_debug_access_callback.cc \
	memory_dmi.cc \
	memory_heap_storage.cc \
	memory_region.cc \
	memory_region_registry.cc \
	memory_storage_base.cc \
	memory_storage_creator.cc \
	reg.cc \
	reset_trigger.cc \
	router.cc \
	router_base.cc \
	status.cc \
	status_registry.cc \
	symbolic_names.cc \
	timing_annotation_registry.cc \
	toplevel_memory_base.cc \
	word_access_unroller_base.cc \
	word_adapter_base.cc

libscml2_a_SOURCES = $(H_FILES) $(PRIVATE_H_FILES) $(CXX_FILES)
INCLUDES = -I$(srcdir)/.. $(OSCITLM_INC) $(SYSC_INC)
INCLUDE_DIR = $(prefix)/include
LIB_DIR = $(prefix)/lib-$(TARGET_ARCH)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/scml2/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/scml2/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libscml2.a: $(libscml2_a_OBJECTS) $(libscml2_a_DEPENDENCIES) 
	-rm -f libscml2.a
	$(libscml2_a_AR) libscml2.a $(libscml2_a_OBJECTS) $(libscml2_a_LIBADD)
	$(RANLIB) libscml2.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/abstraction_level_switch.Po
include ./$(DEPDIR)/bitfield.Po
include ./$(DEPDIR)/bitfield_base.Po
include ./$(DEPDIR)/bitfield_callback_observers.Po
include ./$(DEPDIR)/bitfield_disallow_debug_read_access_callback.Po
include ./$(DEPDIR)/bitfield_disallow_debug_write_access_callback.Po
include ./$(DEPDIR)/bitfield_disallow_read_access_callback.Po
include ./$(DEPDIR)/bitfield_disallow_write_access_callback.Po
include ./$(DEPDIR)/burst_unroller.Po
include ./$(DEPDIR)/callback_observers.Po
include ./$(DEPDIR)/debug_burst_unroller.Po
include ./$(DEPDIR)/dmi_handler.Po
include ./$(DEPDIR)/mapped_ranges_observers.Po
include ./$(DEPDIR)/memory.Po
include ./$(DEPDIR)/memory_alias.Po
include ./$(DEPDIR)/memory_base.Po
include ./$(DEPDIR)/memory_bitfields_callback_base.Po
include ./$(DEPDIR)/memory_bitfields_debug_callback_base.Po
include ./$(DEPDIR)/memory_bitfields_debug_read_callback.Po
include ./$(DEPDIR)/memory_bitfields_debug_write_callback.Po
include ./$(DEPDIR)/memory_bitfields_read_callback.Po
include ./$(DEPDIR)/memory_bitfields_write_callback.Po
include ./$(DEPDIR)/memory_content_observers.Po
include ./$(DEPDIR)/memory_disallow_access_callback.Po
include ./$(DEPDIR)/memory_disallow_debug_access_callback.Po
include ./$(DEPDIR)/memory_dmi.Po
include ./$(DEPDIR)/memory_heap_storage.Po
include ./$(DEPDIR)/memory_region.Po
include ./$(DEPDIR)/memory_region_registry.Po
include ./$(DEPDIR)/memory_storage_base.Po
include ./$(DEPDIR)/memory_storage_creator.Po
include ./$(DEPDIR)/reg.Po
include ./$(DEPDIR)/reset_trigger.Po
include ./$(DEPDIR)/router.Po
include ./$(DEPDIR)/router_base.Po
include ./$(DEPDIR)/status.Po
include ./$(DEPDIR)/status_registry.Po
include ./$(DEPDIR)/symbolic_names.Po
include ./$(DEPDIR)/timing_annotation_registry.Po
include ./$(DEPDIR)/toplevel_memory_base.Po
include ./$(DEPDIR)/word_access_unroller_base.Po
include ./$(DEPDIR)/word_adapter_base.Po

.cc.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-data-local

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-local

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am uninstall-local


.PHONY: scml2.h
scml2.h:
	@rm -rf $@
	@echo "// Copyright (c) 2011 Synopsys, Inc." > $@
	@echo "// All rights reserved worldwide." >> $@
	@echo "" >> $@
	@echo "#ifndef SCML2_H" >> $@
	@echo "#define SCML2_H" >> $@
	@echo "" >> $@
	@for file in $(noinst_HEADERS) ; do \
	  echo "#include \"scml2/$$file\"" >> $@ ; \
	done
	@echo "" >> $@
	@echo "#endif" >> $@

install-data-local: scml2.h
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(INCLUDE_DIR)/scml2
	for file in $(noinst_HEADERS); do \
	  $(INSTALL_DATA) $(srcdir)/$$file $(INCLUDE_DIR)/scml2/$$file; \
	done
	$(INSTALL_DATA) scml2.h $(INCLUDE_DIR)/scml2.h; \
	$(mkinstalldirs) $(LIB_DIR)
	$(INSTALL_DATA) libscml2.a $(LIB_DIR)/libscml2.a
	$(RANLIB) $(LIB_DIR)/libscml2.a

uninstall-local:
	@$(NORMAL_UNINSTALL)
	for file in $(noinst_HEADERS); do \
	  rm -f $(INCLUDE_DIR)/scml2/$$file; \
	done
	-rmdir $(INCLUDE_DIR)/scml2
	rm -f $(LIB_DIR)/libscml2.a
	-rmdir $(prefix)/lib-$(TARGET_ARCH)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
